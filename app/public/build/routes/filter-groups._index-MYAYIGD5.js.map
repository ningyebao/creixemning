{
  "version": 3,
  "sources": ["../../../app/routes/filter-groups._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\filter-groups._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\filter-groups._index.tsx\");\n  import.meta.hot.lastModified = \"1745912041971.8188\";\n}\n// REMIX HMR END\n\n// ~/routes/filter-groups._index.tsx\nimport { json } from \"@remix-run/node\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport { FilterGroupService } from \"~/services/filter-group.service\";\nimport { AgentService } from \"~/services/agents.service\";\nimport { CampanyaService } from \"~/services/campanya.service\";\nimport { LeadService } from \"~/services/leads.service\";\nimport { AssignacioService } from \"~/services/assignacio.service\";\nimport { formatMidaLead } from \"~/lib/types\";\n\n// Interfaces para los datos\n\n// Cargamos agentes y campa\u00F1as para la asignaci\u00F3n\nexport const loader = async ({\n  request\n}) => {\n  try {\n    const [agents, campanyas] = await Promise.all([AgentService.getAll(), CampanyaService.getAll()]);\n    return json({\n      agents,\n      campanyas\n    });\n  } catch (error) {\n    console.error(\"Error cargando datos:\", error);\n    return json({\n      agents: [],\n      campanyas: []\n    });\n  }\n};\n\n// Acci\u00F3n para aplicar grupos de filtros y realizar asignaciones\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const intent = formData.get(\"intent\");\n  if (intent === \"deleteGroup\") {\n    const groupId = formData.get(\"groupId\")?.toString();\n    if (groupId) {\n      // La eliminaci\u00F3n se hace en el cliente, pero enviamos la respuesta para\n      // que la interfaz se actualice\n      return json({\n        success: true,\n        deletedGroupId: groupId\n      });\n    }\n  }\n  return json({\n    error: \"Acci\u00F3n no reconocida\"\n  });\n};\n\n// Funci\u00F3n para combinar filtros de m\u00FAltiples grupos\nfunction combineFilters(groups) {\n  const combinedFilters = {};\n  groups.forEach(group => {\n    Object.entries(group.filters).forEach(([key, value]) => {\n      if (combinedFilters.hasOwnProperty(key)) {\n        // Para filtros de texto, si son diferentes, usamos una estrategia de OR\n        if (typeof value === 'string' && typeof combinedFilters[key] === 'string') {\n          if (value !== combinedFilters[key]) {\n            // No hacemos nada, mantenemos el valor original para provincias/poblaciones/comarcas\n            if (key === 'provincia_lead' || key === 'poblacio_lead' || key === 'comarca_lead' || key === 'cnae_lead') {\n              // Mantener el valor original\n            }\n          }\n        }\n        // Para valores booleanos, usamos OR l\u00F3gico (true tiene precedencia)\n        else if (typeof value === 'boolean' && typeof combinedFilters[key] === 'boolean') {\n          combinedFilters[key] = combinedFilters[key] || value;\n        }\n        // Para valores num\u00E9ricos, depende del tipo de filtro\n        else if (typeof value === 'number' && typeof combinedFilters[key] === 'number') {\n          // Para filtros de m\u00EDnimo, tomamos el valor m\u00E1s peque\u00F1o\n          if (key.includes('_min')) {\n            combinedFilters[key] = Math.min(combinedFilters[key], value);\n          }\n          // Para filtros de m\u00E1ximo, tomamos el valor m\u00E1s grande\n          else if (key.includes('_max')) {\n            combinedFilters[key] = Math.max(combinedFilters[key], value);\n          }\n          // Para tama\u00F1o, prioridad, etc., usamos el valor m\u00E1s grande\n          else {\n            combinedFilters[key] = Math.max(combinedFilters[key], value);\n          }\n        }\n      } else {\n        // Si el filtro no existe, simplemente lo a\u00F1adimos\n        combinedFilters[key] = value;\n      }\n    });\n  });\n  return combinedFilters;\n}\nexport default function FilterGroupsIndex() {\n  _s();\n  const {\n    agents,\n    campanyas\n  } = useLoaderData();\n  const submit = useSubmit();\n  const [filterGroups, setFilterGroups] = useState([]);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(null);\n  const [selectedFilterGroups, setSelectedFilterGroups] = useState([]);\n  const [selectedAgents, setSelectedAgents] = useState([]);\n  const [selectedCampanyas, setSelectedCampanyas] = useState([]);\n\n  // Estados para la previsualizaci\u00F3n de leads\n  const [previewLeads, setPreviewLeads] = useState([]);\n  const [showPreviewLeads, setShowPreviewLeads] = useState(false);\n  const [previewLoading, setPreviewLoading] = useState(false);\n  const [previewError, setPreviewError] = useState(null);\n  const [previewMessage, setPreviewMessage] = useState(null);\n\n  // Estado para el di\u00E1logo de confirmaci\u00F3n\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n\n  // Estado para el resultado de la asignaci\u00F3n\n  const [assignmentResult, setAssignmentResult] = useState(null);\n\n  // Definici\u00F3n de la funci\u00F3n formatFilterValue\n  const formatFilterValue = (key, value) => {\n    if (key === 'mida_lead') {\n      const sizes = ['', 'Microempresa', 'Peque\u00F1a', 'Mediana', 'Grande'];\n      return sizes[parseInt(value)] || value;\n    }\n    if (key === 'actiu_lead' || key === 'cotitza_borsa_lead' || key === 'nomes_temporada_lead' || key === 'conciencia_ecologica_lead' || key === 'solidaria_social_lead') {\n      return value === true || value === 'true' ? 'S\u00ED' : 'No';\n    }\n    return value.toString();\n  };\n\n  // Definici\u00F3n de la funci\u00F3n renderGroupFilters\n  const renderGroupFilters = filters => {\n    const filterLabels = {\n      'provincia_lead': 'Provincia',\n      'poblacio_lead': 'Poblaci\u00F3n',\n      'comarca_lead': 'Comarca',\n      'adreca_lead': 'Direcci\u00F3n',\n      'codi_postal_lead': 'C\u00F3digo postal',\n      'cnae_lead': 'CNAE',\n      'mida_lead': 'Tama\u00F1o',\n      'actiu_lead': 'Activo',\n      'any_creacio_lead': 'A\u00F1o creaci\u00F3n',\n      'nombre_treballadors_lead_min': 'Trabajadores (m\u00EDn)',\n      'nombre_treballadors_lead_max': 'Trabajadores (m\u00E1x)',\n      'capital_social_lead_min': 'Capital social (m\u00EDn)',\n      'capital_social_lead_max': 'Capital social (m\u00E1x)',\n      'idioma_preferent_lead': 'Idioma',\n      'cotitza_borsa_lead': 'Cotiza en bolsa',\n      'nomes_temporada_lead': 'Temporada',\n      'conciencia_ecologica_lead': 'Ecol\u00F3gica',\n      'solidaria_social_lead': 'Solidaria',\n      'importa_exporta_lead': 'Importa/Exporta',\n      'email_lead': 'Email',\n      'NIF_lead': 'NIF',\n      'nom_basic_lead': 'Nombre b\u00E1sico',\n      'nom_empresarial_lead': 'Nombre empresarial',\n      'nom_fiscal_lead': 'Nombre fiscal',\n      'xarxe_social_lead': 'Redes sociales',\n      'link_web_lead': 'Web'\n    };\n    return <div className=\"text-xs text-gray-600 mt-1\">\r\n        {Object.entries(filters).map(([key, value], index) => <span key={key} className=\"mr-2\">\r\n            {filterLabels[key] || key.replace('_lead', '')}: <strong>{formatFilterValue(key, value)}</strong>\r\n            {index < Object.entries(filters).length - 1 ? ' \u2022 ' : ''}\r\n          </span>)}\r\n      </div>;\n  };\n\n  // Carga los grupos de filtros de localStorage\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      setFilterGroups(FilterGroupService.getAll());\n    }\n  }, []);\n\n  // Efecto para previsualizar leads cuando se seleccionan grupos de filtros\n  useEffect(() => {\n    if (selectedFilterGroups.length > 0) {\n      previewLeadsForSelectedGroups();\n    } else {\n      // Limpiar la vista previa si no hay grupos seleccionados\n      setPreviewLeads([]);\n      setShowPreviewLeads(false);\n    }\n  }, [selectedFilterGroups]);\n\n  // Funci\u00F3n para previsualizar los leads autom\u00E1ticamente\n  const previewLeadsForSelectedGroups = async () => {\n    if (selectedFilterGroups.length === 0) {\n      setPreviewError(\"Selecciona al menos un grupo de filtros para previsualizar\");\n      return;\n    }\n    console.log(\"\uD83D\uDD0D Iniciando previsualizaci\u00F3n de leads para grupos:\", selectedFilterGroups);\n    setPreviewLoading(true);\n    setPreviewError(null);\n    setPreviewMessage(null);\n    try {\n      // Obtener los filtros combinados\n      const groups = selectedFilterGroups.map(id => {\n        const group = FilterGroupService.getById(id);\n        console.log(`Grupo de filtros ${id}:`, group);\n        return group;\n      }).filter(Boolean);\n      console.log(\"Grupos encontrados:\", groups.length);\n      const combinedFilters = combineFilters(groups);\n      console.log(\"Filtros combinados:\", combinedFilters);\n\n      // Hacer la solicitud directamente al API\n      console.log(\"\uD83C\uDF10 Llamando a LeadService.getUnassigned con filtros:\", combinedFilters);\n\n      // Verificar la implementaci\u00F3n de LeadService.getUnassigned\n      console.log(\"M\u00E9todo LeadService.getUnassigned:\", typeof LeadService.getUnassigned);\n      try {\n        const leads = await LeadService.getUnassigned(0, 50, combinedFilters);\n        console.log(\"\u2705 Leads recibidos:\", leads ? leads.length : 0);\n        setPreviewLeads(leads || []);\n        setPreviewMessage(leads.length > 0 ? `Se encontraron ${leads.length} leads que cumplen con los filtros.` : \"No se encontraron leads que cumplan con los filtros seleccionados.\");\n        setShowPreviewLeads(leads.length > 0);\n        setPreviewLoading(false);\n      } catch (apiError) {\n        console.error(\"\u274C Error espec\u00EDfico en la llamada a getUnassigned:\", apiError);\n\n        // Detalles adicionales del error\n        if (apiError instanceof Error) {\n          console.error(\"Mensaje:\", apiError.message);\n          console.error(\"Nombre:\", apiError.name);\n          console.error(\"Stack:\", apiError.stack);\n        }\n        throw apiError; // Relanzar para ser capturado por el bloque catch exterior\n      }\n    } catch (error) {\n      console.error(\"\u274C Error al previsualizar leads:\", error);\n\n      // Informaci\u00F3n m\u00E1s detallada del error\n      if (error instanceof Error) {\n        console.error(\"Tipo de error:\", error.constructor.name);\n        console.error(\"Mensaje:\", error.message);\n        console.error(\"Stack:\", error.stack);\n      } else {\n        console.error(\"Error no es instancia de Error:\", typeof error);\n      }\n\n      // Intentar acceder a propiedades espec\u00EDficas del error si es un objeto\n      if (error && typeof error === 'object') {\n        console.error(\"Propiedades del objeto error:\", Object.keys(error));\n\n        // Si hay una propiedad 'response' (com\u00FAn en errores de axios)\n        if ('response' in error) {\n          const response = error.response;\n          console.error(\"Response status:\", response?.status);\n          console.error(\"Response data:\", response?.data);\n        }\n      }\n      setPreviewError(\"Error al cargar los leads. Comprueba la consola para m\u00E1s detalles.\");\n      setPreviewLoading(false);\n    }\n  };\n\n  // Manejador para eliminar un grupo\n  const handleDelete = id => {\n    FilterGroupService.delete(id);\n    setFilterGroups(FilterGroupService.getAll());\n    setShowDeleteConfirm(null);\n\n    // Quitar el grupo eliminado de la selecci\u00F3n si estaba seleccionado\n    setSelectedFilterGroups(prev => prev.filter(groupId => groupId !== id));\n  };\n\n  // Maneja la selecci\u00F3n de un grupo\n  const handleFilterGroupSelection = (id, isSelected) => {\n    if (isSelected) {\n      setSelectedFilterGroups([...selectedFilterGroups, id]);\n    } else {\n      setSelectedFilterGroups(selectedFilterGroups.filter(groupId => groupId !== id));\n    }\n  };\n\n  // Funci\u00F3n para iniciar la asignaci\u00F3n (mostrar confirmaci\u00F3n)\n  const handleStartAssignment = () => {\n    if (selectedFilterGroups.length === 0) {\n      setPreviewError(\"Selecciona al menos un grupo de filtros\");\n      return;\n    }\n    if (selectedAgents.length === 0) {\n      setPreviewError(\"Selecciona al menos un agente\");\n      return;\n    }\n    if (selectedCampanyas.length === 0) {\n      setPreviewError(\"Selecciona al menos una campa\u00F1a\");\n      return;\n    }\n\n    // Mostrar di\u00E1logo de confirmaci\u00F3n\n    setShowConfirmDialog(true);\n  };\n\n  // Funci\u00F3n para realizar la asignaci\u00F3n\n  const handleConfirmAssignment = async () => {\n    try {\n      setPreviewLoading(true);\n      setAssignmentResult(null);\n\n      // Obtener los filtros combinados\n      const groups = selectedFilterGroups.map(id => FilterGroupService.getById(id)).filter(Boolean);\n      const combinedFilters = combineFilters(groups);\n\n      // Buscar los leads que cumplen con los filtros\n      const leads = await LeadService.getUnassigned(0, 500, combinedFilters);\n      if (leads.length === 0) {\n        setAssignmentResult({\n          success: false,\n          message: \"No se encontraron leads que cumplan con los filtros seleccionados\"\n        });\n        setPreviewLoading(false);\n        setShowConfirmDialog(false);\n        return;\n      }\n\n      // Realizar la asignaci\u00F3n\n      const leadIds = leads.map(lead => lead.id_lead);\n      let totalSuccess = 0;\n      let totalError = 0;\n\n      // Realizar la asignaci\u00F3n para cada campa\u00F1a\n      for (const campanyaId of selectedCampanyas) {\n        const result = await AssignacioService.bulkAssignAll(selectedAgents, leadIds, 3,\n        // prioridad media por defecto\n        3,\n        // potencial medio por defecto\n        \"Asignaci\u00F3n autom\u00E1tica desde grupos de filtros\", campanyaId);\n        totalSuccess += result.success;\n        totalError += result.error;\n      }\n      setAssignmentResult({\n        success: true,\n        message: `Se complet\u00F3 la asignaci\u00F3n autom\u00E1tica de leads.`,\n        totalSuccess,\n        totalError\n      });\n      setPreviewLoading(false);\n      setShowConfirmDialog(false);\n    } catch (error) {\n      console.error(\"Error al realizar la asignaci\u00F3n:\", error);\n      setAssignmentResult({\n        success: false,\n        message: \"Error al procesar la asignaci\u00F3n: \" + (error instanceof Error ? error.message : String(error))\n      });\n      setPreviewLoading(false);\n      setShowConfirmDialog(false);\n    }\n  };\n  return <div className=\"p-6 max-w-7xl mx-auto space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className=\"text-2xl font-bold\">Grupos de Filtros</h1>\r\n        <div>\r\n          <Link to=\"/filter-groups/new\" className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\">\r\n            + Nuevo Grupo de Filtros\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Instrucciones */}\r\n      <div className=\"bg-blue-50 p-4 rounded border border-blue-200\">\r\n        <h2 className=\"text-lg font-medium text-blue-800 mb-2\">\u00BFC\u00F3mo funciona?</h2>\r\n        <ol className=\"list-decimal pl-5 text-blue-700 space-y-1\">\r\n          <li>Selecciona uno o m\u00E1s grupos de filtros (puedes combinarlos)</li>\r\n          <li>Los leads que cumplen con los filtros se mostrar\u00E1n autom\u00E1ticamente</li>\r\n          <li>Selecciona agentes y campa\u00F1as</li>\r\n          <li>Haz clic en \"Asignar Leads Autom\u00E1ticamente\" para completar el proceso</li>\r\n        </ol>\r\n      </div>\r\n\r\n      {/* Panel de selecci\u00F3n de grupos de filtros */}\r\n      <div className=\"bg-white rounded-lg shadow\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <h2 className=\"text-lg font-medium\">Seleccione Grupos de Filtros para Asignar</h2>\r\n        </div>\r\n\r\n        {filterGroups.length > 0 ? <div className=\"p-4\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <div className=\"flex items-center\">\r\n                <span className=\"mr-2 font-medium\">\r\n                  {selectedFilterGroups.length} grupos seleccionados\r\n                </span>\r\n                {selectedFilterGroups.length > 0 && <button onClick={() => setSelectedFilterGroups([])} className=\"text-sm text-red-600 hover:text-red-800\">\r\n                    Limpiar selecci\u00F3n\r\n                  </button>}\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Mensajes de error o informaci\u00F3n */}\r\n            {previewError && <div className=\"mb-4 bg-red-100 text-red-700 p-3 rounded\">\r\n                {previewError}\r\n              </div>}\r\n            {previewMessage && !previewError && <div className=\"mb-4 bg-green-100 text-green-700 p-3 rounded\">\r\n                {previewMessage}\r\n              </div>}\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {filterGroups.map(group => <div key={group.id} className={`border rounded-lg p-4 transition-colors ${selectedFilterGroups.includes(group.id) ? \"border-blue-500 bg-blue-50\" : \"border-gray-200 hover:border-gray-400\"}`}>\r\n                  <div className=\"flex justify-between items-start mb-2\">\r\n                    <div className=\"flex items-center\">\r\n                      <input type=\"checkbox\" id={`group-${group.id}`} checked={selectedFilterGroups.includes(group.id)} onChange={e => handleFilterGroupSelection(group.id, e.target.checked)} className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded mr-2\" />\r\n                      <label htmlFor={`group-${group.id}`} className=\"font-medium cursor-pointer\">{group.name}</label>\r\n                    </div>\r\n                    <div className=\"flex space-x-1\">\r\n                      <Link to={`/filter-groups/${group.id}`} className=\"text-blue-600 hover:text-blue-900 text-sm\">\r\n                        Editar\r\n                      </Link>\r\n                      <button onClick={() => setShowDeleteConfirm(group.id)} className=\"text-red-600 hover:text-red-900 text-sm\">\r\n                        Eliminar\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  {group.description && <p className=\"text-sm text-gray-600 mb-2\">{group.description}</p>}\r\n                  <div className=\"border-t border-gray-100 pt-2 mt-2\">\r\n                    {renderGroupFilters(group.filters)}\r\n                  </div>\r\n                </div>)}\r\n            </div>\r\n          </div> : <div className=\"p-6 text-center\">\r\n            <p className=\"text-gray-500 mb-4\">No hay grupos de filtros guardados.</p>\r\n            <Link to=\"/filter-groups/new\" className=\"inline-block px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\">\r\n              Crear primer grupo de filtros\r\n            </Link>\r\n          </div>}\r\n      </div>\r\n\r\n      {/* Previsualizaci\u00F3n de leads */}\r\n      {showPreviewLeads && previewLeads.length > 0 && <div className=\"bg-white rounded-lg shadow\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between\">\r\n            <h2 className=\"text-lg font-medium\">Leads encontrados ({previewLeads.length})</h2>\r\n            <button className=\"text-blue-600 hover:text-blue-800 text-sm\" onClick={() => setShowPreviewLeads(!showPreviewLeads)}>\r\n              {showPreviewLeads ? \"Ocultar leads\" : \"Mostrar leads\"}\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"p-4\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Empresa</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">CNAE</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Provincia</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Poblaci\u00F3n</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tama\u00F1o</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {previewLeads.slice(0, 10).map(lead => <tr key={lead.id_lead} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.id_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.nom_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.nom_empresarial_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.email_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.cnae_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.provincia_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.poblacio_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{formatMidaLead(lead.mida_lead)}</td>\r\n                    </tr>)}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            {previewLeads.length > 10 && <div className=\"mt-2 text-sm text-gray-500 text-center\">\r\n                Mostrando 10 de {previewLeads.length} leads encontrados.\r\n              </div>}\r\n          </div>\r\n        </div>}\r\n\r\n      {/* Panel de asignaci\u00F3n a campa\u00F1as y agentes */}\r\n      {selectedFilterGroups.length > 0 && previewLeads.length > 0 && <div className=\"bg-white rounded-lg shadow\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200\">\r\n            <h2 className=\"text-lg font-medium\">Asignar a Campa\u00F1as y Agentes</h2>\r\n          </div>\r\n          \r\n          <div className=\"p-4\">\r\n            <div className=\"bg-green-50 p-3 rounded border border-green-200 mb-4\">\r\n              <p className=\"text-green-800\">\r\n                <span className=\"font-medium\">Listos para asignar:</span> {previewLeads.length} leads que cumplen con los filtros\r\n              </p>\r\n              <p className=\"text-xs text-green-700 mt-1\">\r\n                Selecciona los agentes y campa\u00F1as a los que quieres asignar estos leads.\r\n              </p>\r\n            </div>\r\n            \r\n            {/* Resultado de la asignaci\u00F3n */}\r\n            {assignmentResult && <div className={`p-4 rounded mb-4 ${assignmentResult.success ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"}`}>\r\n                <p className=\"font-medium\">{assignmentResult.message}</p>\r\n                {assignmentResult.success && <p className=\"text-sm mt-1\">\r\n                    Se crearon {assignmentResult.totalSuccess} asignaciones con \u00E9xito.\r\n                    {assignmentResult.totalError && assignmentResult.totalError > 0 && ` Hubo ${assignmentResult.totalError} errores.`}\r\n                  </p>}\r\n              </div>}\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {/* Selecci\u00F3n de agentes */}\r\n              <div>\r\n                <h3 className=\"text-md font-medium mb-3\">Seleccionar Agentes</h3>\r\n                <div className=\"border p-3 rounded max-h-60 overflow-y-auto\">\r\n                  {agents.length > 0 ? <div className=\"space-y-2\">\r\n                      {agents.map(agent => <div key={agent.id_agent} className=\"p-2 hover:bg-gray-100\">\r\n                          <label className=\"flex items-center space-x-2\">\r\n                            <input type=\"checkbox\" name=\"agentIds\" value={agent.id_agent} onChange={e => {\n                      const id = parseInt(e.target.value);\n                      setSelectedAgents(prev => e.target.checked ? [...prev, id] : prev.filter(agentId => agentId !== id));\n                    }} checked={selectedAgents.includes(agent.id_agent)} />\r\n                            <span>{agent.nom_agent}</span>\r\n                          </label>\r\n                        </div>)}\r\n                    </div> : <p className=\"text-gray-500 text-center py-2\">Cargando agentes...</p>}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Selecci\u00F3n de campa\u00F1as */}\r\n              <div>\r\n                <h3 className=\"text-md font-medium mb-3\">Seleccionar Campa\u00F1as</h3>\r\n                <div className=\"border p-3 rounded max-h-60 overflow-y-auto\">\r\n                  {campanyas.length > 0 ? <div className=\"space-y-2\">\r\n                      {campanyas.map(campanya => <div key={campanya.id_campanya} className=\"p-2 hover:bg-gray-100\">\r\n                          <label className=\"flex items-center space-x-2\">\r\n                            <input type=\"checkbox\" name=\"campanyaIds\" value={campanya.id_campanya} onChange={e => {\n                      const id = parseInt(e.target.value);\n                      setSelectedCampanyas(prev => e.target.checked ? [...prev, id] : prev.filter(campanyaId => campanyaId !== id));\n                    }} checked={selectedCampanyas.includes(campanya.id_campanya)} />\r\n                            <span>{campanya.id_campanya} - {campanya.campanya_nom}</span>\r\n                          </label>\r\n                        </div>)}\r\n                    </div> : <p className=\"text-gray-500 text-center py-2\">Cargando campa\u00F1as...</p>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Bot\u00F3n de asignar */}\r\n            <div className=\"mt-6\">\r\n              <button type=\"button\" onClick={handleStartAssignment} disabled={previewLoading || selectedFilterGroups.length === 0 || selectedAgents.length === 0 || selectedCampanyas.length === 0} className={`w-full px-4 py-3 bg-green-600 text-white rounded hover:bg-green-700 flex justify-center items-center ${previewLoading || selectedFilterGroups.length === 0 || selectedAgents.length === 0 || selectedCampanyas.length === 0 ? \"bg-green-300 cursor-not-allowed\" : \"\"}`}>\r\n                <span className=\"mr-2\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </span>\r\n                Asignar Leads Autom\u00E1ticamente\r\n              </button>\r\n              <p className=\"text-sm text-gray-500 mt-2 text-center\">\r\n                Esta acci\u00F3n asignar\u00E1 los {previewLeads.length} leads seleccionados a los agentes y campa\u00F1as elegidos.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n\r\n      {/* Di\u00E1logo de confirmaci\u00F3n de asignaci\u00F3n */}\r\n      {showConfirmDialog && <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">Confirmar asignaci\u00F3n</h3>\r\n            <p className=\"mb-2\">\r\n              \u00BFEst\u00E1 seguro de que desea asignar los leads a los agentes y campa\u00F1as seleccionados?\r\n            </p>\r\n            <p className=\"mb-6 text-sm text-gray-600\">\r\n              Esta acci\u00F3n asignar\u00E1 todos los leads que cumplan con los filtros seleccionados.\r\n            </p>\r\n            \r\n            <div className=\"bg-yellow-50 p-3 rounded border border-yellow-200 mb-4\">\r\n              <p className=\"text-sm text-yellow-800\">\r\n                <span className=\"font-medium\">Resumen:</span>\r\n              </p>\r\n              <ul className=\"mt-1 text-sm text-yellow-700 list-disc pl-5\">\r\n                <li>Grupos de filtros: {selectedFilterGroups.length}</li>\r\n                <li>Agentes seleccionados: {selectedAgents.length}</li>\r\n                <li>Campa\u00F1as seleccionadas: {selectedCampanyas.length}</li>\r\n                <li>Leads afectados: {previewLeads.length}{previewLeads.length === 50 ? \"+\" : \"\"}</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"flex justify-end space-x-4\">\r\n              <button onClick={() => setShowConfirmDialog(false)} className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300\">\r\n                Cancelar\r\n              </button>\r\n              <button onClick={handleConfirmAssignment} disabled={previewLoading} className={`px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 ${previewLoading ? \"opacity-50 cursor-not-allowed\" : \"\"}`}>\r\n                {previewLoading ? \"Procesando...\" : \"Confirmar\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      \r\n      {/* Modal de confirmaci\u00F3n de eliminaci\u00F3n */}\r\n      {showDeleteConfirm && <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">Confirmar eliminaci\u00F3n</h3>\r\n            <p className=\"mb-6\">\r\n              \u00BFEst\u00E1 seguro de que desea eliminar este grupo de filtros? Esta acci\u00F3n no se puede deshacer.\r\n            </p>\r\n            <div className=\"flex justify-end space-x-4\">\r\n              <button onClick={() => setShowDeleteConfirm(null)} className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300\">\r\n                Cancelar\r\n              </button>\r\n              <button onClick={() => handleDelete(showDeleteConfirm)} className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\">\r\n                Eliminar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n    </div>;\n}\n_s(FilterGroupsIndex, \"3+fjw7r4tHfTVkEDbNF8mcROm7A=\", false, function () {\n  return [useLoaderData, useSubmit];\n});\n_c = FilterGroupsIndex;\nvar _c;\n$RefreshReg$(_c, \"FilterGroupsIndex\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
