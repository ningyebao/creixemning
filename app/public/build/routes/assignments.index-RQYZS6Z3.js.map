{
  "version": 3,
  "sources": ["../../../app/routes/assignments.index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\assignments.index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\assignments.index.tsx\");\n  import.meta.hot.lastModified = \"1748853862382.5044\";\n}\n// REMIX HMR END\n\n// app/routes/assignments.tsx\nimport { useState, useEffect } from 'react';\nimport { json } from '@remix-run/node';\nimport { useLoaderData, useFetcher } from '@remix-run/react';\nimport { LeadService } from '~/services/leads.service';\nimport { AgentsService } from '~/services/agents.service';\nimport { CampanyaService } from '~/services/campanya.service';\nimport { AssignacioService } from '~/services/assignacio.service';\nimport { FilterGroupService } from '~/services/filter-group.services';\nimport { handleApiError } from '~/lib/api/client';\nimport FilterPanel from './assignments.filter-panel';\nimport LeadList from './assignments.lead-list';\nimport AgentSelection from './assignments.agent-selection';\nimport AutoFilter from './assignments.auto-filter';\nimport SavedFilters from './assignments.saved-filters';\nimport FilterActions from './assignments.filter-actions';\nexport const loader = async () => {\n  try {\n    const [agents, campanyas, initialLeads] = await Promise.all([AgentsService.getAll(), CampanyaService.getAll(), LeadService.getUnassigned(0, 20)]);\n    return json({\n      agents,\n      campanyas,\n      initialLeads\n    });\n  } catch (error) {\n    console.error('Error en loader de assignments:', error);\n    return handleApiError(error);\n  }\n};\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const action = formData.get('action');\n  try {\n    if (action === 'assignLeads') {\n      const leadIds = JSON.parse(formData.get('leadIds'));\n      const agentIds = JSON.parse(formData.get('agentIds'));\n      const assignmentType = formData.get('assignmentType');\n      const prioritat = Number(formData.get('prioritat'));\n      const potencial = Number(formData.get('potencial'));\n      const observaciones = formData.get('observaciones');\n      const campanyaId = Number(formData.get('campanyaId'));\n      const authorId = Number(formData.get('authorId') || 1);\n      if (leadIds.length === 0 || agentIds.length === 0) {\n        return json({\n          success: false,\n          error: 'Debes seleccionar al menos un lead y un agente para realizar la asignaci\u00F3n.'\n        });\n      }\n      let result;\n      if (assignmentType === 'roundRobin') {\n        result = await AssignacioService.bulkAssign(agentIds, leadIds, prioritat, potencial, observaciones, campanyaId, authorId);\n      } else if (assignmentType === 'all') {\n        result = await AssignacioService.bulkAssignAll(agentIds, leadIds, prioritat, potencial, observaciones, campanyaId, authorId);\n      } else {\n        return json({\n          success: false,\n          error: 'Tipo de asignaci\u00F3n no v\u00E1lido.'\n        });\n      }\n      if (result.error > 0) {\n        return json({\n          success: result.success > 0,\n          message: `Se asignaron ${result.success} leads correctamente.`,\n          error: `Ocurrieron ${result.error} errores: ${result.errorDetails}`\n        });\n      }\n      return json({\n        success: true,\n        message: `Se asignaron ${result.success} leads correctamente.`\n      });\n    }\n    if (action === 'notification') {\n      const type = formData.get('type');\n      const message = formData.get('message');\n      return json({\n        success: type === 'success',\n        message: type === 'success' || type === 'info' ? message : undefined,\n        error: type === 'error' ? message : undefined,\n        type\n      });\n    }\n    return json({\n      success: false,\n      error: 'Acci\u00F3n no reconocida.'\n    });\n  } catch (error) {\n    console.error('Error en action de assignments:', error);\n    return handleApiError(error);\n  }\n};\nexport default function Assignments() {\n  _s();\n  const loaderData = useLoaderData();\n  const fetcher = useFetcher();\n\n  // Estados\n  const [selectedLeads, setSelectedLeads] = useState([]);\n  const [selectedAgents, setSelectedAgents] = useState([]);\n  const [filteredLeads, setFilteredLeads] = useState(loaderData.initialLeads);\n  const [activeFilters, setActiveFilters] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCampanya, setSelectedCampanya] = useState(null);\n  const [assignmentType, setAssignmentType] = useState('roundRobin');\n  const [prioritat, setPrioritat] = useState(2);\n  const [potencial, setPotencial] = useState(3);\n  const [observaciones, setObservaciones] = useState('');\n  const [showAutoFilterConfig, setShowAutoFilterConfig] = useState(false);\n  const [filterError, setFilterError] = useState(null);\n  const [showSavedFilters, setShowSavedFilters] = useState(false);\n\n  // Aplicar filtros\n  const applyFilters = async filters => {\n    setIsLoading(true);\n\n    // Asegurar que activeFilters se actualiza correctamente primero\n    setActiveFilters(filters);\n    setFilterError(null);\n    try {\n      const apiFilters = {};\n\n      // Procesamiento m\u00E1s preciso de los filtros\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined && value !== '') {\n          if (key === 'any_creacio_lead') {\n            apiFilters[key] = String(value);\n          } else if (['actiu_lead', 'cotitza_borsa_lead', 'nomes_temporada_lead', 'conciencia_ecologica_lead', 'solidaria_social_lead'].includes(key)) {\n            // Asegurarnos de enviar valores booleanos reales\n            apiFilters[key] = typeof value === 'string' ? value === 'true' : Boolean(value);\n          } else if (['mida_lead', 'nombre_treballadors_lead_min', 'nombre_treballadors_lead_max', 'capital_social_lead_min', 'capital_social_lead_max'].includes(key)) {\n            apiFilters[key] = Number(value);\n          } else {\n            apiFilters[key] = value;\n          }\n        }\n      });\n      console.log('Aplicando filtros:', apiFilters);\n      console.log('Active filters actualizados:', filters); // Log para debug\n\n      // Llamada al servicio con los filtros procesados\n      const leads = await LeadService.getUnassigned(0, 100, apiFilters);\n      setFilteredLeads(leads);\n      if (leads.length === 0) {\n        setFilterError('No se encontraron leads con los filtros aplicados.');\n      }\n      setSelectedLeads([]);\n    } catch (error) {\n      console.error('Error al aplicar filtros:', error);\n      setFilterError('Error al consultar los datos. Por favor, int\u00E9ntalo de nuevo.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Manejar la asignaci\u00F3n\n  const handleAssign = () => {\n    if (selectedLeads.length === 0 || selectedAgents.length === 0 || !selectedCampanya) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append('action', 'assignLeads');\n    formData.append('leadIds', JSON.stringify(selectedLeads.map(lead => lead.id_lead)));\n    formData.append('agentIds', JSON.stringify(selectedAgents.map(agent => agent.id_agent)));\n    formData.append('assignmentType', assignmentType);\n    formData.append('prioritat', prioritat.toString());\n    formData.append('potencial', potencial.toString());\n    formData.append('observaciones', observaciones);\n    formData.append('campanyaId', selectedCampanya.toString());\n    fetcher.submit(formData, {\n      method: 'post'\n    });\n  };\n\n  // Guardar grupo de filtros\n  const handleSaveFilterGroup = (name, description) => {\n    if (!name.trim()) return;\n\n    // Usar el servicio para guardar los filtros\n    FilterGroupService.create(name, description, activeFilters).then(response => {\n      // Mostrar mensaje de \u00E9xito\n      console.log('Grupo de filtros guardado:', response);\n\n      // Usar fetcher para mostrar un mensaje de \u00E9xito\n      const formData = new FormData();\n      formData.append('action', 'notification');\n      formData.append('type', 'success');\n      formData.append('message', `Grupo de filtros \"${name}\" guardado correctamente.`);\n      fetcher.submit(formData, {\n        method: 'post'\n      });\n    }).catch(error => {\n      console.error('Error al guardar grupo de filtros:', error);\n\n      // Mostrar mensaje de error\n      const formData = new FormData();\n      formData.append('action', 'notification');\n      formData.append('type', 'error');\n      formData.append('message', 'No se pudo guardar el grupo de filtros. Por favor, int\u00E9ntelo de nuevo.');\n      fetcher.submit(formData, {\n        method: 'post'\n      });\n    });\n  };\n\n  // Actualizar despu\u00E9s de asignaci\u00F3n exitosa\n  useEffect(() => {\n    if (fetcher.data?.success && fetcher.data?.type !== 'success') {\n      applyFilters(activeFilters);\n    }\n  }, [fetcher.data]);\n\n  // Contar filtros activos\n  const activeFilterCount = Object.keys(activeFilters).length;\n  return <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"py-5\">\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Asignaci\u00F3n de Leads</h1>\r\n            <p className=\"mt-1 text-sm text-gray-500\">\r\n              Busca, filtra y asigna leads a tus agentes comerciales\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Notificaciones */}\r\n      {(fetcher.data?.message || fetcher.data?.error) && <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mt-4\">\r\n          {fetcher.data?.message && <div className=\"bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded-md flex items-center mb-4\">\r\n              <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              {fetcher.data.message}\r\n            </div>}\r\n          {fetcher.data?.error && <div className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md flex items-center\">\r\n              <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              {fetcher.data.error}\r\n            </div>}\r\n        </div>}\r\n\r\n      {/* Contenido principal */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\r\n          {/* Panel lateral - Filtros y acciones */}\r\n          <div className=\"lg:col-span-3 space-y-4\">\r\n            {/* Panel de filtros */}\r\n            <FilterPanel onApplyFilters={applyFilters} initialFilters={activeFilters} isLoading={isLoading} activeFilterCount={activeFilterCount} />\r\n\r\n            {/* Acciones de filtros - Usando el nuevo componente */}\r\n            <FilterActions activeFilters={activeFilters} onSaveFilters={handleSaveFilterGroup} onToggleAutoFilter={() => setShowAutoFilterConfig(!showAutoFilterConfig)} onToggleSavedFilters={() => setShowSavedFilters(!showSavedFilters)} showAutoFilter={showAutoFilterConfig} showSavedFilters={showSavedFilters} />\r\n\r\n            {/* Error de filtros */}\r\n            {filterError && <div className=\"bg-amber-50 border border-amber-200 text-amber-800 px-4 py-3 rounded-md\">\r\n                <p className=\"text-sm\">{filterError}</p>\r\n              </div>}\r\n\r\n            {/* Panel de filtros guardados */}\r\n            {showSavedFilters && <div className=\"bg-white rounded-lg shadow-md border border-gray-200 overflow-hidden\">\r\n                <div className=\"bg-indigo-50 px-4 py-3 border-b border-indigo-100\">\r\n                  <h3 className=\"text-base font-medium text-indigo-800\">Filtros guardados</h3>\r\n                </div>\r\n                <div className=\"p-4\">\r\n                  <SavedFilters onSelectFilter={applyFilters} />\r\n                </div>\r\n              </div>}\r\n\r\n            {/* Panel de automatizaci\u00F3n */}\r\n            {showAutoFilterConfig && <div className=\"bg-white rounded-lg shadow-md border border-gray-200 overflow-hidden\">\r\n                <div className=\"bg-indigo-50 px-4 py-3 border-b border-indigo-100\">\r\n                  <h3 className=\"text-base font-medium text-indigo-800\">Automatizaci\u00F3n de filtros</h3>\r\n                </div>\r\n                <div className=\"p-4\">\r\n                  <AutoFilter selectedFilters={activeFilters} agents={loaderData.agents} campanyas={loaderData.campanyas} />\r\n                </div>\r\n              </div>}\r\n          </div>\r\n\r\n          {/* Panel principal - Resultados y configuraci\u00F3n */}\r\n          <div className=\"lg:col-span-9 space-y-6\">\r\n            {/* Lista de leads */}\r\n            <div className=\"bg-white rounded-lg shadow-md border border-gray-200 overflow-hidden\">\r\n              <div className=\"bg-gray-50 px-4 py-3 border-b border-gray-200 flex justify-between items-center\">\r\n                <div>\r\n                  <h2 className=\"text-lg font-medium text-gray-800\">\r\n                    Leads disponibles\r\n                  </h2>\r\n                  <p className=\"text-sm text-gray-500 mt-0.5\">\r\n                    {filteredLeads.length} leads encontrados \u2022 {selectedLeads.length} seleccionados\r\n                  </p>\r\n                </div>\r\n                {isLoading && <div className=\"flex items-center text-blue-600\">\r\n                    <svg className=\"animate-spin h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                    </svg>\r\n                    Cargando...\r\n                  </div>}\r\n              </div>\r\n              \r\n              <LeadList leads={filteredLeads} selectedLeads={selectedLeads} onSelectLeads={setSelectedLeads} isLoading={isLoading} />\r\n            </div>\r\n\r\n            {/* Panel de asignaci\u00F3n */}\r\n            <div className=\"bg-white rounded-lg shadow-md border border-gray-200 overflow-hidden\">\r\n              <div className=\"bg-gray-50 px-4 py-3 border-b border-gray-200\">\r\n                <h2 className=\"text-lg font-medium text-gray-800\">\r\n                  Configurar asignaci\u00F3n\r\n                </h2>\r\n              </div>\r\n              \r\n              <div className=\"p-4\">\r\n                <AgentSelection agents={loaderData.agents} campanyas={loaderData.campanyas} selectedAgents={selectedAgents} onSelectAgents={setSelectedAgents} selectedCampanya={selectedCampanya} onSelectCampanya={setSelectedCampanya} assignmentType={assignmentType} onChangeAssignmentType={setAssignmentType} prioritat={prioritat} onChangePrioritat={setPrioritat} potencial={potencial} onChangePotencial={setPotencial} observaciones={observaciones} onChangeObservaciones={setObservaciones} />\r\n\r\n                <div className=\"mt-6\">\r\n                  <button type=\"button\" className=\"w-full bg-blue-600 text-white px-4 py-3 rounded-md hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors font-medium flex items-center justify-center gap-2\" onClick={handleAssign} disabled={selectedLeads.length === 0 || selectedAgents.length === 0 || !selectedCampanya || fetcher.state !== 'idle'}>\r\n                    {fetcher.state !== 'idle' ? <>\r\n                        <svg className=\"animate-spin h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                        </svg>\r\n                        Asignando...\r\n                      </> : <>\r\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n                        </svg>\r\n                        Asignar {selectedLeads.length} leads a {selectedAgents.length} agentes\r\n                      </>}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(Assignments, \"wPwnu+a9v9HczXcYTsCeR2GCrHk=\", false, function () {\n  return [useLoaderData, useFetcher];\n});\n_c = Assignments;\nvar _c;\n$RefreshReg$(_c, \"Assignments\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
