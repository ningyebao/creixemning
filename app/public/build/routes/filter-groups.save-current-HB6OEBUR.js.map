{
  "version": 3,
  "sources": ["../../../app/routes/filter-groups.save-current.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\filter-groups.save-current.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\filter-groups.save-current.tsx\");\n  import.meta.hot.lastModified = \"1745419739987.105\";\n}\n// REMIX HMR END\n\n// ~/routes/filter-groups._index.tsx\nimport { json } from \"@remix-run/node\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useSubmit, Form } from \"@remix-run/react\";\nimport { FilterGroupService } from \"~/services/filter-group.service\";\nimport { AgentService } from \"~/services/agents.service\";\nimport { CampanyaService } from \"~/services/campanya.service\";\n\n// Interfaces para los datos\n\n// Cargamos agentes y campa\u00F1as para la asignaci\u00F3n\nexport const loader = async ({\n  request\n}) => {\n  try {\n    const [agents, campanyas] = await Promise.all([AgentService.getAll(), CampanyaService.getAll()]);\n    return json({\n      agents,\n      campanyas\n    });\n  } catch (error) {\n    console.error(\"Error cargando datos:\", error);\n    return json({\n      agents: [],\n      campanyas: []\n    });\n  }\n};\n\n// Acci\u00F3n para aplicar grupos de filtros\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const filterGroupIds = formData.getAll(\"filterGroupIds\");\n  const agentIds = formData.getAll(\"agentIds\").map(id => parseInt(id.toString()));\n  const campanyaIds = formData.getAll(\"campanyaIds\").map(id => parseInt(id.toString()));\n\n  // Construir la URL para redireccionar a la p\u00E1gina de asignaci\u00F3n masiva\n  let url = \"/assignments/bulk?\";\n\n  // Si hay grupos de filtros seleccionados, los a\u00F1adimos a la URL\n  if (filterGroupIds.length > 0) {\n    url += `filterGroupId=${filterGroupIds[0]}`;\n    // Podr\u00EDamos a\u00F1adir soporte para m\u00FAltiples grupos en el futuro\n  }\n\n  // Si hay agentes y campa\u00F1as seleccionados, tambi\u00E9n los a\u00F1adimos\n  if (agentIds.length > 0 && campanyaIds.length > 0) {\n    url += \"&preselectedAgents=\" + agentIds.join(\",\");\n    url += \"&preselectedCampanyas=\" + campanyaIds.join(\",\");\n  }\n  return json({\n    redirect: url\n  });\n};\nexport default function FilterGroupsIndex() {\n  _s();\n  const [filterGroups, setFilterGroups] = useState([]);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(null);\n  const [selectedFilterGroups, setSelectedFilterGroups] = useState([]);\n  const [selectedAgents, setSelectedAgents] = useState([]);\n  const [selectedCampanyas, setSelectedCampanyas] = useState([]);\n  const submit = useSubmit();\n\n  // Carga los grupos de filtros de localStorage\n  useEffect(() => {\n    setFilterGroups(FilterGroupService.getAll());\n  }, []);\n\n  // Manejador para eliminar un grupo\n  const handleDelete = id => {\n    FilterGroupService.delete(id);\n    setFilterGroups(FilterGroupService.getAll());\n    setShowDeleteConfirm(null);\n  };\n\n  // Maneja la selecci\u00F3n de un grupo\n  const handleFilterGroupSelection = (id, isSelected) => {\n    if (isSelected) {\n      setSelectedFilterGroups([...selectedFilterGroups, id]);\n    } else {\n      setSelectedFilterGroups(selectedFilterGroups.filter(groupId => groupId !== id));\n    }\n  };\n\n  // Maneja la aplicaci\u00F3n de los filtros seleccionados\n  const handleApplyFilterGroups = () => {\n    const formData = new FormData();\n\n    // A\u00F1adir los grupos seleccionados\n    selectedFilterGroups.forEach(id => {\n      formData.append(\"filterGroupIds\", id);\n    });\n\n    // A\u00F1adir los agentes seleccionados\n    selectedAgents.forEach(id => {\n      formData.append(\"agentIds\", id.toString());\n    });\n\n    // A\u00F1adir las campa\u00F1as seleccionadas\n    selectedCampanyas.forEach(id => {\n      formData.append(\"campanyaIds\", id.toString());\n    });\n    submit(formData, {\n      method: \"post\"\n    });\n  };\n  return <div className=\"p-6 max-w-7xl mx-auto space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className=\"text-2xl font-bold\">Grupos de Filtros</h1>\r\n        <div className=\"flex space-x-2\">\r\n          <Link to=\"/filter-groups/new\" className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\">\r\n            + Nuevo Grupo de Filtros\r\n          </Link>\r\n          <Link to=\"/assignments/bulk\" className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\">\r\n            Volver a Asignaci\u00F3n Masiva\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Panel de selecci\u00F3n de grupos de filtros */}\r\n      <div className=\"bg-white rounded-lg shadow\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <h2 className=\"text-lg font-medium\">Selecci\u00F3n de Grupos de Filtros</h2>\r\n        </div>\r\n\r\n        {filterGroups.length > 0 ? <div className=\"p-4\">\r\n            <p className=\"mb-4 text-gray-600\">\r\n              Seleccione uno o m\u00E1s grupos de filtros para aplicar. Luego puede asignarlos a campa\u00F1as y agentes.\r\n            </p>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Selecci\u00F3n</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Descripci\u00F3n</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Fecha de creaci\u00F3n</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {filterGroups.map(group => <tr key={group.id} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <input type=\"checkbox\" checked={selectedFilterGroups.includes(group.id)} onChange={e => handleFilterGroupSelection(group.id, e.target.checked)} className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\" />\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{group.name}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{group.description || \"-\"}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        {new Date(group.createdAt).toLocaleDateString()}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex space-x-2\">\r\n                          <Link to={`/filter-groups/${group.id}`} className=\"text-blue-600 hover:text-blue-900\">\r\n                            Editar\r\n                          </Link>\r\n                          <button onClick={() => setShowDeleteConfirm(group.id)} className=\"text-red-600 hover:text-red-900\">\r\n                            Eliminar\r\n                          </button>\r\n                          <Link to={`/assignments/bulk?filterGroupId=${group.id}`} className=\"text-green-600 hover:text-green-900\">\r\n                            Aplicar\r\n                          </Link>\r\n                        </div>\r\n                      </td>\r\n                    </tr>)}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div> : <div className=\"p-6 text-center\">\r\n            <p className=\"text-gray-500\">No hay grupos de filtros guardados.</p>\r\n            <Link to=\"/filter-groups/new\" className=\"mt-4 inline-block px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\">\r\n              Crear primer grupo de filtros\r\n            </Link>\r\n          </div>}\r\n      </div>\r\n\r\n      {/* Panel de asignaci\u00F3n a campa\u00F1as y agentes */}\r\n      {selectedFilterGroups.length > 0 && <div className=\"bg-white rounded-lg shadow\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200\">\r\n            <h2 className=\"text-lg font-medium\">Asignar a Campa\u00F1as y Agentes</h2>\r\n          </div>\r\n          \r\n          <div className=\"p-4\">\r\n            <p className=\"mb-4 text-blue-600\">\r\n              <span className=\"font-medium\">Grupos seleccionados:</span> {selectedFilterGroups.length}\r\n            </p>\r\n            \r\n            <Form method=\"post\" className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {/* Selecci\u00F3n de agentes */}\r\n              <div>\r\n                <h3 className=\"text-md font-medium mb-3\">Seleccionar Agentes (opcional)</h3>\r\n                <div className=\"border p-3 rounded max-h-60 overflow-y-auto\">\r\n                  {/* Aqu\u00ED se renderizan los agentes */}\r\n                  {/* Esto ser\u00E1 renderizado con los datos reales del loader en la implementaci\u00F3n final */}\r\n                  <div className=\"space-y-2\">\r\n                    {/* Ejemplo de agentes */}\r\n                    <div className=\"p-2 hover:bg-gray-100\">\r\n                      <label className=\"flex items-center space-x-2\">\r\n                        <input type=\"checkbox\" name=\"agentIds\" value=\"1\" onChange={e => {\n                      const id = parseInt(e.target.value);\n                      setSelectedAgents(prev => e.target.checked ? [...prev, id] : prev.filter(agentId => agentId !== id));\n                    }} />\r\n                        <span>Agente 1</span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"p-2 hover:bg-gray-100\">\r\n                      <label className=\"flex items-center space-x-2\">\r\n                        <input type=\"checkbox\" name=\"agentIds\" value=\"2\" onChange={e => {\n                      const id = parseInt(e.target.value);\n                      setSelectedAgents(prev => e.target.checked ? [...prev, id] : prev.filter(agentId => agentId !== id));\n                    }} />\r\n                        <span>Agente 2</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Selecci\u00F3n de campa\u00F1as */}\r\n              <div>\r\n                <h3 className=\"text-md font-medium mb-3\">Seleccionar Campa\u00F1as (opcional)</h3>\r\n                <div className=\"border p-3 rounded max-h-60 overflow-y-auto\">\r\n                  {/* Aqu\u00ED se renderizan las campa\u00F1as */}\r\n                  {/* Esto ser\u00E1 renderizado con los datos reales del loader en la implementaci\u00F3n final */}\r\n                  <div className=\"space-y-2\">\r\n                    {/* Ejemplo de campa\u00F1as */}\r\n                    <div className=\"p-2 hover:bg-gray-100\">\r\n                      <label className=\"flex items-center space-x-2\">\r\n                        <input type=\"checkbox\" name=\"campanyaIds\" value=\"1\" onChange={e => {\n                      const id = parseInt(e.target.value);\n                      setSelectedCampanyas(prev => e.target.checked ? [...prev, id] : prev.filter(campanyaId => campanyaId !== id));\n                    }} />\r\n                        <span>Campa\u00F1a 1</span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"p-2 hover:bg-gray-100\">\r\n                      <label className=\"flex items-center space-x-2\">\r\n                        <input type=\"checkbox\" name=\"campanyaIds\" value=\"2\" onChange={e => {\n                      const id = parseInt(e.target.value);\n                      setSelectedCampanyas(prev => e.target.checked ? [...prev, id] : prev.filter(campanyaId => campanyaId !== id));\n                    }} />\r\n                        <span>Campa\u00F1a 2</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Bot\u00F3n de aplicar */}\r\n              <div className=\"col-span-1 md:col-span-2\">\r\n                <button type=\"button\" onClick={handleApplyFilterGroups} className=\"w-full px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\">\r\n                  Aplicar Filtros y Continuar a Asignaci\u00F3n\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </div>}\r\n\r\n      {/* Modal de confirmaci\u00F3n de eliminaci\u00F3n */}\r\n      {showDeleteConfirm && <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">Confirmar eliminaci\u00F3n</h3>\r\n            <p className=\"mb-6\">\r\n              \u00BFEst\u00E1 seguro de que desea eliminar este grupo de filtros? Esta acci\u00F3n no se puede deshacer.\r\n            </p>\r\n            <div className=\"flex justify-end space-x-4\">\r\n              <button onClick={() => setShowDeleteConfirm(null)} className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300\">\r\n                Cancelar\r\n              </button>\r\n              <button onClick={() => handleDelete(showDeleteConfirm)} className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\">\r\n                Eliminar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n    </div>;\n}\n_s(FilterGroupsIndex, \"BOj0rv52L9vgg+HCEyPxPu5oIy4=\", false, function () {\n  return [useSubmit];\n});\n_c = FilterGroupsIndex;\nvar _c;\n$RefreshReg$(_c, \"FilterGroupsIndex\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
