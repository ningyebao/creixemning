{
  "version": 3,
  "sources": ["../../../app/routes/assignments.bulk.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\assignments.bulk.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\assignments.bulk.tsx\");\n  import.meta.hot.lastModified = \"1746433943225.9797\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData, useActionData, Form, useSubmit, useNavigation, Link, useSearchParams } from \"@remix-run/react\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { LeadService } from \"~/services/leads.service\";\nimport { AgentService } from \"~/services/agents.service\";\nimport { CampanyaService } from \"~/services/campanya.service\";\nimport { AssignacioService } from \"~/services/assignacio.service\";\nimport { FilterGroupService } from \"~/services/filter-group.service\";\nimport { formatMidaLead } from \"~/lib/types\";\n\n// Interfaces para tipar los datos del loader y action\n\nexport const loader = async ({\n  request\n}) => {\n  try {\n    const url = new URL(request.url);\n\n    // Obtener todos los filtros con valores por defecto seguros\n    const filters = {\n      provincia_lead: url.searchParams.get(\"provincia_lead\") || \"\",\n      poblacio_lead: url.searchParams.get(\"poblacio_lead\") || \"\",\n      comarca_lead: url.searchParams.get(\"comarca_lead\") || \"\",\n      cnae_lead: url.searchParams.get(\"cnae_lead\") || \"\",\n      email_lead: url.searchParams.get(\"email_lead\") || \"\",\n      mida_lead: 0,\n      any_creacio_lead: url.searchParams.get(\"any_creacio_lead\") || \"\",\n      idioma_preferent_lead: url.searchParams.get(\"idioma_preferent_lead\") || \"\",\n      importa_exporta_lead: url.searchParams.get(\"importa_exporta_lead\") || \"\"\n    };\n\n    // Parsear valores num\u00E9ricos de forma segura\n    if (url.searchParams.get(\"mida_lead\")) {\n      try {\n        filters.mida_lead = parseInt(url.searchParams.get(\"mida_lead\") || \"0\");\n      } catch (e) {\n        console.error(\"Error al parsear mida_lead:\", e);\n      }\n    }\n\n    // Parsear rangos num\u00E9ricos\n    const numericRanges = [\"nombre_treballadors_lead_min\", \"nombre_treballadors_lead_max\", \"capital_social_lead_min\", \"capital_social_lead_max\"];\n    numericRanges.forEach(param => {\n      if (url.searchParams.get(param)) {\n        try {\n          filters[param] = parseInt(url.searchParams.get(param) || \"0\");\n        } catch (e) {\n          console.error(`Error al parsear ${param}:`, e);\n        }\n      }\n    });\n\n    // Manejar valores booleanos\n    const booleanParams = [\"actiu_lead\", \"cotitza_borsa_lead\", \"nomes_temporada_lead\", \"conciencia_ecologica_lead\", \"solidaria_social_lead\"];\n    booleanParams.forEach(param => {\n      const value = url.searchParams.get(param);\n      if (value && value !== \"Todos\") {\n        filters[param] = value === \"true\";\n      }\n    });\n\n    // Limpiar filtros vac\u00EDos\n    Object.keys(filters).forEach(key => {\n      if (filters[key] === \"\" || filters[key] === undefined || filters[key] === null || filters[key] === 0 && key !== \"mida_lead\") {\n        delete filters[key];\n      }\n    });\n    console.log(\"Filtros aplicados en el loader:\", filters);\n\n    // Definir datos por defecto con tipos correctos\n    let defaultData = {\n      provincias: [],\n      poblaciones: [],\n      comarcas: [],\n      agents: [],\n      campanyas: [],\n      filteredLeads: [],\n      hasFilters: Object.keys(filters).length > 0,\n      currentFilters: filters\n    };\n\n    // Usar Promise.allSettled para gestionar fallos independientes\n    const [provinciasResult, poblacionesResult, comarcasResult, agentsResult, campanyasResult, filteredLeadsResult] = await Promise.allSettled([LeadService.getAllProvincias(), LeadService.getAllPoblaciones(), LeadService.getAllComarcas(), AgentService.getAll(), CampanyaService.getAll(), LeadService.getUnassigned(0, 500, filters)]);\n\n    // Extraer datos de forma segura\n    if (provinciasResult.status === 'fulfilled') defaultData.provincias = provinciasResult.value;else console.error(\"Error obteniendo provincias:\", provinciasResult.reason);\n    if (poblacionesResult.status === 'fulfilled') defaultData.poblaciones = poblacionesResult.value;else console.error(\"Error obteniendo poblaciones:\", poblacionesResult.reason);\n    if (comarcasResult.status === 'fulfilled') defaultData.comarcas = comarcasResult.value;else console.error(\"Error obteniendo comarcas:\", comarcasResult.reason);\n    if (agentsResult.status === 'fulfilled') defaultData.agents = agentsResult.value;else console.error(\"Error obteniendo agentes:\", agentsResult.reason);\n    if (campanyasResult.status === 'fulfilled') defaultData.campanyas = campanyasResult.value;else console.error(\"Error obteniendo campa\u00F1as:\", campanyasResult.reason);\n    if (filteredLeadsResult.status === 'fulfilled') defaultData.filteredLeads = filteredLeadsResult.value;else console.error(\"Error obteniendo leads filtrados:\", filteredLeadsResult.reason);\n    return json(defaultData);\n  } catch (error) {\n    console.error(\"Error general en loader:\", error);\n\n    // Devolver datos vac\u00EDos pero bien tipados en caso de error\n    return json({\n      provincias: [],\n      poblaciones: [],\n      comarcas: [],\n      agents: [],\n      campanyas: [],\n      filteredLeads: [],\n      hasFilters: false,\n      currentFilters: {}\n    });\n  }\n};\nexport const action = async ({\n  request\n}) => {\n  try {\n    const formData = await request.formData();\n    const intent = formData.get(\"intent\");\n    console.log(\"Acci\u00F3n recibida:\", intent);\n    if (intent === \"search\") {\n      const url = new URL(request.url);\n      // Limpiar par\u00E1metros existentes\n      url.searchParams.forEach((_, key) => url.searchParams.delete(key));\n\n      // Procesar valores del formulario con validaci\u00F3n\n      formData.forEach((value, key) => {\n        if (key.startsWith(\"filter_\")) {\n          const filterName = key.replace(\"filter_\", \"\");\n          const strValue = value ? value.toString() : \"\";\n\n          // Solo a\u00F1adir si el valor no est\u00E1 vac\u00EDo y no es el valor por defecto\n          if (strValue && strValue !== \"0\" && strValue !== \"false\" && strValue !== \"Todos\") {\n            url.searchParams.append(filterName, strValue);\n          }\n        }\n      });\n\n      // A\u00F1adir loadLeads=true siempre\n      url.searchParams.append(\"loadLeads\", \"true\");\n\n      // Preservar otros par\u00E1metros importantes\n      const currentUrl = new URL(request.url);\n      const paramsToPreserve = [\"autoAssign\", \"preselectedAgents\", \"preselectedCampanyas\"];\n      paramsToPreserve.forEach(param => {\n        const value = currentUrl.searchParams.get(param);\n        if (value) {\n          url.searchParams.append(param, value);\n        }\n      });\n      console.log(\"URL de redirecci\u00F3n en action:\", url.toString());\n      return redirect(url.toString());\n    } else if (intent === \"assign\") {\n      try {\n        // Validar y procesar IDs de agentes\n        const agentIds = formData.getAll(\"agentIds\").map(id => {\n          const parsedId = parseInt(id.toString());\n          if (isNaN(parsedId)) {\n            throw new Error(`ID de agente inv\u00E1lido: ${id}`);\n          }\n          return parsedId;\n        });\n\n        // Validar y procesar IDs de leads\n        const leadIds = formData.getAll(\"leadIds\").map(id => {\n          const parsedId = parseInt(id.toString());\n          if (isNaN(parsedId)) {\n            throw new Error(`ID de lead inv\u00E1lido: ${id}`);\n          }\n          return parsedId;\n        });\n\n        // Validar y procesar IDs de campa\u00F1as\n        const campanyaIds = formData.getAll(\"campanyaIds\").map(id => {\n          const parsedId = parseInt(id.toString());\n          if (isNaN(parsedId)) {\n            throw new Error(`ID de campa\u00F1a inv\u00E1lido: ${id}`);\n          }\n          return parsedId;\n        });\n\n        // Validar existencia de datos requeridos\n        if (agentIds.length === 0) {\n          return json({\n            success: false,\n            error: \"Debes seleccionar al menos un agente\"\n          }, {\n            status: 400\n          });\n        }\n        if (leadIds.length === 0) {\n          return json({\n            success: false,\n            error: \"Debes seleccionar al menos un lead\"\n          }, {\n            status: 400\n          });\n        }\n        if (campanyaIds.length === 0) {\n          return json({\n            success: false,\n            error: \"Debes seleccionar al menos una campa\u00F1a\"\n          }, {\n            status: 400\n          });\n        }\n\n        // Obtener otros par\u00E1metros con valores por defecto\n        const distribucion = formData.get(\"distribucion\")?.toString() || \"equitativo\";\n        const prioritat = parseInt(formData.get(\"prioritat\")?.toString() || \"3\");\n        const potencial = parseInt(formData.get(\"potencial\")?.toString() || \"3\");\n        const observaciones = formData.get(\"observaciones\")?.toString() || \"\";\n\n        // Procesar asignaciones con manejo de errores\n        const results = [];\n        for (const campanyaId of campanyaIds) {\n          try {\n            let result;\n            if (distribucion === \"equitativo\") {\n              result = await AssignacioService.bulkAssign(agentIds, leadIds, prioritat, potencial, observaciones, campanyaId);\n            } else {\n              result = await AssignacioService.bulkAssignAll(agentIds, leadIds, prioritat, potencial, observaciones, campanyaId);\n            }\n            results.push({\n              campanyaId,\n              ...result\n            });\n          } catch (error) {\n            console.error(`Error en la asignaci\u00F3n para campa\u00F1a ${campanyaId}:`, error);\n            results.push({\n              campanyaId,\n              success: 0,\n              error: leadIds.length\n            });\n          }\n        }\n        const totalSuccess = results.reduce((sum, r) => sum + r.success, 0);\n        const totalError = results.reduce((sum, r) => sum + r.error, 0);\n        return json({\n          success: true,\n          results,\n          totalSuccess,\n          totalError,\n          message: `Se realizaron ${totalSuccess} asignaciones correctamente. Hubo ${totalError} errores.`\n        });\n      } catch (error) {\n        console.error(\"Error en acci\u00F3n de asignaci\u00F3n:\", error);\n        return json({\n          success: false,\n          error: error instanceof Error ? error.message : \"Error durante el proceso de asignaci\u00F3n\"\n        }, {\n          status: 400\n        });\n      }\n    }\n    return json({\n      success: false,\n      error: \"Acci\u00F3n no v\u00E1lida\"\n    }, {\n      status: 400\n    });\n  } catch (error) {\n    console.error(\"Error general en action:\", error);\n    return json({\n      success: false,\n      error: \"Ha ocurrido un error inesperado\"\n    }, {\n      status: 500\n    });\n  }\n};\nexport default function BulkAssignmentPage() {\n  _s();\n  const {\n    provincias = [],\n    poblaciones = [],\n    comarcas = [],\n    agents = [],\n    campanyas = [],\n    filteredLeads = [],\n    hasFilters = false,\n    currentFilters = {}\n  } = useLoaderData() || {};\n  const actionData = useActionData();\n  const submit = useSubmit();\n  const navigation = useNavigation();\n  const [searchParams] = useSearchParams();\n  const [activeTab, setActiveTab] = useState(\"filtrado\");\n  const [selectedLeadIds, setSelectedLeadIds] = useState([]);\n\n  // Estado para grupos de filtros\n  const [filterGroups, setFilterGroups] = useState([]);\n  const [selectedFilterGroupId, setSelectedFilterGroupId] = useState(\"\");\n\n  // Estados para el modo de asignaci\u00F3n autom\u00E1tica\n  const [autoAssignMode, setAutoAssignMode] = useState(false);\n  const [assignmentReady, setAssignmentReady] = useState(false);\n  const [leadsLoaded, setLeadsLoaded] = useState(false);\n\n  // Estados para el modal de guardar filtros\n  const [showSaveFilterModal, setShowSaveFilterModal] = useState(false);\n  const [filterGroupName, setFilterGroupName] = useState(\"\");\n  const [filterGroupDesc, setFilterGroupDesc] = useState(\"\");\n  const [saveFilterError, setSaveFilterError] = useState(\"\");\n\n  // Estados para preselecci\u00F3n de agentes y campa\u00F1as\n  const [preselectedAgentIds, setPreselectedAgentIds] = useState([]);\n  const [preselectedCampanyaIds, setPreselectedCampanyaIds] = useState([]);\n  const isFirstLoad = useRef(true);\n\n  // Estados para filtros individuales\n  const [provinciaFilter, setProvinciaFilter] = useState(currentFilters?.provincia_lead || \"\");\n  const [poblacionFilter, setPoblacionFilter] = useState(currentFilters?.poblacio_lead || \"\");\n  const [comarcaFilter, setComarcaFilter] = useState(currentFilters?.comarca_lead || \"\");\n  const [cnaeFilter, setCnaeFilter] = useState(currentFilters?.cnae_lead || \"\");\n  const [midaFilter, setMidaFilter] = useState(currentFilters?.mida_lead || 0);\n  const [activoFilter, setActivoFilter] = useState(currentFilters?.actiu_lead !== undefined ? currentFilters?.actiu_lead ? \"true\" : \"false\" : \"Todos\");\n  const [yearFilter, setYearFilter] = useState(currentFilters?.any_creacio_lead || \"\");\n  const [workersMinFilter, setWorkersMinFilter] = useState(currentFilters?.nombre_treballadors_lead_min?.toString() || \"\");\n  const [workersMaxFilter, setWorkersMaxFilter] = useState(currentFilters?.nombre_treballadors_lead_max?.toString() || \"\");\n  const [capitalMinFilter, setCapitalMinFilter] = useState(currentFilters?.capital_social_lead_min?.toString() || \"\");\n  const [capitalMaxFilter, setCapitalMaxFilter] = useState(currentFilters?.capital_social_lead_max?.toString() || \"\");\n  const [idiomFilter, setIdiomFilter] = useState(currentFilters?.idioma_preferent_lead || \"\");\n  const [cotizaFilter, setCotizaFilter] = useState(currentFilters?.cotitza_borsa_lead !== undefined ? currentFilters?.cotitza_borsa_lead ? \"true\" : \"false\" : \"Todos\");\n  const [temporadaFilter, setTemporadaFilter] = useState(currentFilters?.nomes_temporada_lead !== undefined ? currentFilters?.nomes_temporada_lead ? \"true\" : \"false\" : \"Todos\");\n  const [ecologicaFilter, setEcologicaFilter] = useState(currentFilters?.conciencia_ecologica_lead !== undefined ? currentFilters?.conciencia_ecologica_lead ? \"true\" : \"false\" : \"Todos\");\n  const [solidariaFilter, setSolidariaFilter] = useState(currentFilters?.solidaria_social_lead !== undefined ? currentFilters?.solidaria_social_lead ? \"true\" : \"false\" : \"Todos\");\n  const [importaExportaFilter, setImportaExportaFilter] = useState(currentFilters?.importa_exporta_lead || \"\");\n  const [emailFilter, setEmailFilter] = useState(currentFilters?.email_lead || \"\");\n\n  // Detectar el modo de asignaci\u00F3n autom\u00E1tica\n  useEffect(() => {\n    const autoAssign = searchParams.get(\"autoAssign\") === \"true\";\n    if (autoAssign) {\n      setAutoAssignMode(true);\n    }\n  }, [searchParams]);\n\n  // Cargar grupos de filtros y verificar par\u00E1metros al montar\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      setFilterGroups(FilterGroupService.getAll());\n\n      // Verificar si hay un \u00FAnico grupo de filtros o m\u00FAltiples\n      const filterGroupId = searchParams.get(\"filterGroupId\");\n      const selectedFilterGroups = searchParams.get(\"selectedFilterGroups\");\n      if (filterGroupId) {\n        // Modo antiguo: usar un solo grupo\n        setSelectedFilterGroupId(filterGroupId);\n        const group = FilterGroupService.getById(filterGroupId);\n        if (group) {\n          applyFilterGroup(group);\n        }\n      } else if (selectedFilterGroups) {\n        // Modo nuevo: aplicar m\u00FAltiples grupos combinados\n        const groupIds = selectedFilterGroups.split(\",\");\n        const groups = groupIds.map(id => FilterGroupService.getById(id)).filter(group => group !== undefined);\n        if (groups.length > 0) {\n          applyCombinedFilterGroups(groups);\n        }\n      }\n\n      // Verificar si hay agentes preseleccionados\n      const preselectedAgents = searchParams.get(\"preselectedAgents\");\n      if (preselectedAgents) {\n        const agentIds = preselectedAgents.split(\",\").map(id => parseInt(id));\n        setPreselectedAgentIds(agentIds);\n      }\n\n      // Verificar si hay campa\u00F1as preseleccionadas\n      const preselectedCampanyas = searchParams.get(\"preselectedCampanyas\");\n      if (preselectedCampanyas) {\n        const campanyaIds = preselectedCampanyas.split(\",\").map(id => parseInt(id));\n        setPreselectedCampanyaIds(campanyaIds);\n      }\n    }\n  }, [searchParams]);\n\n  // Aplicar un grupo de filtros\n  // Funci\u00F3n mejorada para aplicar un grupo de filtros\n  const applyFilterGroup = group => {\n    try {\n      // Actualizar estados de filtros con validaci\u00F3n\n      setProvinciaFilter(group.filters.provincia_lead || \"\");\n      setPoblacionFilter(group.filters.poblacio_lead || \"\");\n      setComarcaFilter(group.filters.comarca_lead || \"\");\n      setCnaeFilter(group.filters.cnae_lead || \"\");\n\n      // Parseo seguro de valores num\u00E9ricos\n      setMidaFilter(group.filters.mida_lead ? parseInt(group.filters.mida_lead.toString()) : 0);\n\n      // Manejo seguro de booleanos\n      if (group.filters.actiu_lead !== undefined) {\n        setActivoFilter(group.filters.actiu_lead.toString());\n      } else {\n        setActivoFilter(\"Todos\");\n      }\n      setYearFilter(group.filters.any_creacio_lead || \"\");\n\n      // Parseo seguro para rangos num\u00E9ricos\n      setWorkersMinFilter(group.filters.nombre_treballadors_lead_min?.toString() || \"\");\n      setWorkersMaxFilter(group.filters.nombre_treballadors_lead_max?.toString() || \"\");\n      setCapitalMinFilter(group.filters.capital_social_lead_min?.toString() || \"\");\n      setCapitalMaxFilter(group.filters.capital_social_lead_max?.toString() || \"\");\n      setIdiomFilter(group.filters.idioma_preferent_lead || \"\");\n\n      // Manejo seguro de booleanos\n      if (group.filters.cotitza_borsa_lead !== undefined) {\n        setCotizaFilter(group.filters.cotitza_borsa_lead.toString());\n      } else {\n        setCotizaFilter(\"Todos\");\n      }\n      if (group.filters.nomes_temporada_lead !== undefined) {\n        setTemporadaFilter(group.filters.nomes_temporada_lead.toString());\n      } else {\n        setTemporadaFilter(\"Todos\");\n      }\n      if (group.filters.conciencia_ecologica_lead !== undefined) {\n        setEcologicaFilter(group.filters.conciencia_ecologica_lead.toString());\n      } else {\n        setEcologicaFilter(\"Todos\");\n      }\n      if (group.filters.solidaria_social_lead !== undefined) {\n        setSolidariaFilter(group.filters.solidaria_social_lead.toString());\n      } else {\n        setSolidariaFilter(\"Todos\");\n      }\n      setImportaExportaFilter(group.filters.importa_exporta_lead || \"\");\n      setEmailFilter(group.filters.email_lead || \"\");\n\n      // Preparar el FormData con validaci\u00F3n\n      const formData = new FormData();\n      formData.append(\"intent\", \"search\");\n\n      // Agregar todos los filtros al FormData con el prefijo filter_\n      Object.entries(group.filters).forEach(([key, value]) => {\n        // Solo a\u00F1adir valores v\u00E1lidos\n        if (value !== undefined && value !== null) {\n          formData.append(`filter_${key}`, value.toString());\n        }\n      });\n\n      // Enviar el formulario con try/catch\n      try {\n        submit(formData, {\n          method: \"post\"\n        });\n      } catch (error) {\n        console.error(\"Error al enviar el formulario:\", error);\n      }\n    } catch (error) {\n      console.error(\"Error al aplicar grupo de filtros:\", error);\n    }\n  };\n\n  // Funci\u00F3n para combinar m\u00FAltiples grupos de filtros\n  const applyCombinedFilterGroups = groups => {\n    // Objeto para almacenar los filtros combinados\n    const combinedFilters = {};\n\n    // Para cada grupo de filtros\n    groups.forEach(group => {\n      // Combinar los filtros del grupo actual\n      Object.entries(group.filters).forEach(([key, value]) => {\n        // Si el filtro ya existe, aplicamos l\u00F3gica de combinaci\u00F3n\n        if (combinedFilters.hasOwnProperty(key)) {\n          // Para filtros de texto, si son diferentes, usamos una estrategia de OR\n          if (typeof value === 'string' && typeof combinedFilters[key] === 'string') {\n            if (value !== combinedFilters[key]) {\n              // Si son provincias/poblaciones diferentes, no hacemos nada (incompatible)\n              if (key === 'provincia_lead' || key === 'poblacio_lead' || key === 'comarca_lead') {\n                // No hacemos nada, mantenemos el valor original\n              }\n              // Para CNAE, podr\u00EDamos fusionar o mantener el m\u00E1s espec\u00EDfico\n              else if (key === 'cnae_lead') {\n                // Mantener el valor original\n              }\n              // Para otros filtros de texto, mantenemos el valor original\n              else {\n                // No hacemos nada, mantenemos el valor original\n              }\n            }\n          }\n          // Para valores booleanos, usamos OR l\u00F3gico (true tiene precedencia)\n          else if (typeof value === 'boolean' && typeof combinedFilters[key] === 'boolean') {\n            combinedFilters[key] = combinedFilters[key] || value;\n          }\n          // Para valores num\u00E9ricos, depende del tipo de filtro\n          else if (typeof value === 'number' && typeof combinedFilters[key] === 'number') {\n            // Para filtros de m\u00EDnimo, tomamos el valor m\u00E1s peque\u00F1o\n            if (key.includes('_min')) {\n              combinedFilters[key] = Math.min(combinedFilters[key], value);\n            }\n            // Para filtros de m\u00E1ximo, tomamos el valor m\u00E1s grande\n            else if (key.includes('_max')) {\n              combinedFilters[key] = Math.max(combinedFilters[key], value);\n            }\n            // Para tama\u00F1o, prioridad, etc., usamos el valor m\u00E1s grande\n            else {\n              combinedFilters[key] = Math.max(combinedFilters[key], value);\n            }\n          }\n        } else {\n          // Si el filtro no existe, simplemente lo a\u00F1adimos\n          combinedFilters[key] = value;\n        }\n      });\n    });\n\n    // Actualizar los estados de los filtros\n    if (combinedFilters.provincia_lead !== undefined) setProvinciaFilter(combinedFilters.provincia_lead);\n    if (combinedFilters.poblacio_lead !== undefined) setPoblacionFilter(combinedFilters.poblacio_lead);\n    if (combinedFilters.comarca_lead !== undefined) setComarcaFilter(combinedFilters.comarca_lead);\n    if (combinedFilters.cnae_lead !== undefined) setCnaeFilter(combinedFilters.cnae_lead);\n    if (combinedFilters.mida_lead !== undefined) setMidaFilter(combinedFilters.mida_lead);\n    if (combinedFilters.actiu_lead !== undefined) setActivoFilter(combinedFilters.actiu_lead.toString());else setActivoFilter(\"Todos\");\n    if (combinedFilters.any_creacio_lead !== undefined) setYearFilter(combinedFilters.any_creacio_lead);\n    if (combinedFilters.nombre_treballadors_lead_min !== undefined) setWorkersMinFilter(combinedFilters.nombre_treballadors_lead_min.toString());\n    if (combinedFilters.nombre_treballadors_lead_max !== undefined) setWorkersMaxFilter(combinedFilters.nombre_treballadors_lead_max.toString());\n    if (combinedFilters.capital_social_lead_min !== undefined) setCapitalMinFilter(combinedFilters.capital_social_lead_min.toString());\n    if (combinedFilters.capital_social_lead_max !== undefined) setCapitalMaxFilter(combinedFilters.capital_social_lead_max.toString());\n    if (combinedFilters.idioma_preferent_lead !== undefined) setIdiomFilter(combinedFilters.idioma_preferent_lead);\n    if (combinedFilters.cotitza_borsa_lead !== undefined) setCotizaFilter(combinedFilters.cotitza_borsa_lead.toString());else setCotizaFilter(\"Todos\");\n    if (combinedFilters.nomes_temporada_lead !== undefined) setTemporadaFilter(combinedFilters.nomes_temporada_lead.toString());else setTemporadaFilter(\"Todos\");\n    if (combinedFilters.conciencia_ecologica_lead !== undefined) setEcologicaFilter(combinedFilters.conciencia_ecologica_lead.toString());else setEcologicaFilter(\"Todos\");\n    if (combinedFilters.solidaria_social_lead !== undefined) setSolidariaFilter(combinedFilters.solidaria_social_lead.toString());else setSolidariaFilter(\"Todos\");\n    if (combinedFilters.importa_exporta_lead !== undefined) setImportaExportaFilter(combinedFilters.importa_exporta_lead);\n    if (combinedFilters.email_lead !== undefined) setEmailFilter(combinedFilters.email_lead);\n\n    // Preparar FormData para enviar los filtros\n    const formData = new FormData();\n    formData.append(\"intent\", \"search\");\n\n    // Agregar todos los filtros combinados al FormData\n    Object.entries(combinedFilters).forEach(([key, value]) => {\n      formData.append(`filter_${key}`, value.toString());\n    });\n\n    // Enviar el formulario para aplicar los filtros\n    submit(formData, {\n      method: \"post\"\n    });\n\n    // Mostrar mensaje sobre la combinaci\u00F3n de filtros (opcional)\n    console.log(\"Filtros combinados aplicados:\", combinedFilters);\n  };\n  useEffect(() => {\n    if (isFirstLoad.current && filteredLeads.length > 0) {\n      // Solo seleccionar autom\u00E1ticamente todos los leads si estamos en modo auto-asignaci\u00F3n\n      if (autoAssignMode) {\n        setSelectedLeadIds(filteredLeads.map(lead => lead.id_lead));\n      } else {\n        // En modo normal, no seleccionamos ning\u00FAn lead autom\u00E1ticamente\n        setSelectedLeadIds([]);\n      }\n      isFirstLoad.current = false;\n      setLeadsLoaded(true);\n    }\n  }, [filteredLeads, autoAssignMode]);\n\n  // Si hay preselecciones, autom\u00E1ticamente cambiamos a la pesta\u00F1a de asignaci\u00F3n si hay leads seleccionados\n  useEffect(() => {\n    // Si hay agentes o campa\u00F1as preseleccionados y hay leads seleccionados, vamos a la pesta\u00F1a de asignaci\u00F3n\n    if ((preselectedAgentIds.length > 0 || preselectedCampanyaIds.length > 0) && selectedLeadIds.length > 0 && activeTab === \"filtrado\") {\n      setActiveTab(\"asignacion\");\n    }\n  }, [selectedLeadIds, preselectedAgentIds, preselectedCampanyaIds, activeTab]);\n\n  // Manejar la asignaci\u00F3n autom\u00E1tica cuando todo est\u00E1 listo\n  useEffect(() => {\n    // Verificar si estamos en modo auto-asignaci\u00F3n y los leads est\u00E1n cargados\n    if (autoAssignMode && leadsLoaded && selectedLeadIds.length > 0 && (preselectedAgentIds.length > 0 || preselectedCampanyaIds.length > 0)) {\n      // Cambiar a la pesta\u00F1a de asignaci\u00F3n\n      setActiveTab(\"asignacion\");\n\n      // Indicar que estamos listos para asignar\n      setAssignmentReady(true);\n    }\n  }, [autoAssignMode, leadsLoaded, selectedLeadIds, preselectedAgentIds, preselectedCampanyaIds]);\n\n  // Realizar la asignaci\u00F3n autom\u00E1tica cuando est\u00E9 todo listo\n  useEffect(() => {\n    if (assignmentReady && autoAssignMode) {\n      // Peque\u00F1o retraso para permitir que la UI se actualice\n      const timeoutId = setTimeout(() => {\n        performAutoAssignment();\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [assignmentReady, autoAssignMode]);\n\n  // Funci\u00F3n para realizar la asignaci\u00F3n autom\u00E1tica\n  const performAutoAssignment = () => {\n    if (!assignmentReady || selectedLeadIds.length === 0 || preselectedAgentIds.length === 0 && preselectedCampanyaIds.length === 0) {\n      console.error(\"No se puede realizar la asignaci\u00F3n autom\u00E1tica: faltan datos\");\n      return;\n    }\n\n    // Construir el FormData para el env\u00EDo\n    const formData = new FormData();\n    formData.append(\"intent\", \"assign\");\n\n    // A\u00F1adir leads seleccionados\n    selectedLeadIds.forEach(id => {\n      formData.append(\"leadIds\", id.toString());\n    });\n\n    // A\u00F1adir agentes preseleccionados\n    if (preselectedAgentIds.length > 0) {\n      preselectedAgentIds.forEach(id => {\n        formData.append(\"agentIds\", id.toString());\n      });\n    } else {\n      // Si no hay agentes preseleccionados, seleccionar el primero por defecto\n      if (agents.length > 0) {\n        formData.append(\"agentIds\", agents[0].id_agent.toString());\n      }\n    }\n\n    // A\u00F1adir campa\u00F1as preseleccionadas\n    if (preselectedCampanyaIds.length > 0) {\n      preselectedCampanyaIds.forEach(id => {\n        formData.append(\"campanyaIds\", id.toString());\n      });\n    } else {\n      // Si no hay campa\u00F1as preseleccionadas, seleccionar la primera por defecto\n      if (campanyas.length > 0) {\n        formData.append(\"campanyaIds\", campanyas[0].id_campanya.toString());\n      }\n    }\n\n    // A\u00F1adir otros par\u00E1metros necesarios\n    formData.append(\"distribucion\", \"equitativo\");\n    formData.append(\"prioritat\", \"3\");\n    formData.append(\"potencial\", \"3\");\n    formData.append(\"observaciones\", \"Asignaci\u00F3n autom\u00E1tica desde grupos de filtros\");\n\n    // Enviar el formulario\n    submit(formData, {\n      method: \"post\"\n    });\n\n    // Reiniciar el modo de asignaci\u00F3n autom\u00E1tica\n    setAssignmentReady(false);\n    setAutoAssignMode(false);\n  };\n\n  // Funciones para manejar la selecci\u00F3n de leads\n  const handleLeadSelection = (leadId, isSelected) => {\n    setSelectedLeadIds(prev => {\n      if (isSelected) {\n        // Si el lead ya est\u00E1 seleccionado, no lo a\u00F1adimos de nuevo\n        if (prev.includes(leadId)) return prev;\n        return [...prev, leadId];\n      } else {\n        // Si no est\u00E1 seleccionado, lo eliminamos\n        return prev.filter(id => id !== leadId);\n      }\n    });\n  };\n  const selectAllLeads = () => setSelectedLeadIds(filteredLeads.map(lead => lead.id_lead));\n  const deselectAllLeads = () => setSelectedLeadIds([]);\n  const toggleAllLeads = () => {\n    const allLeadIds = filteredLeads.map(lead => lead.id_lead);\n    const newSelection = allLeadIds.filter(id => !selectedLeadIds.includes(id));\n    setSelectedLeadIds(newSelection.length > 0 ? newSelection : []);\n  };\n\n  // Funci\u00F3n para guardar filtros\n  const handleSaveFilterGroup = () => {\n    if (!filterGroupName.trim()) {\n      setSaveFilterError(\"El nombre es obligatorio\");\n      return;\n    }\n\n    // Construir el objeto de filtros a partir de los estados actuales\n    const filtersToSave = {};\n    if (provinciaFilter) filtersToSave.provincia_lead = provinciaFilter;\n    if (poblacionFilter) filtersToSave.poblacio_lead = poblacionFilter;\n    if (comarcaFilter) filtersToSave.comarca_lead = comarcaFilter;\n    if (cnaeFilter) filtersToSave.cnae_lead = cnaeFilter;\n    if (midaFilter > 0) filtersToSave.mida_lead = midaFilter;\n    if (activoFilter !== \"Todos\") {\n      filtersToSave.actiu_lead = activoFilter === \"true\";\n    }\n    if (yearFilter) filtersToSave.any_creacio_lead = yearFilter;\n    if (workersMinFilter) filtersToSave.nombre_treballadors_lead_min = parseInt(workersMinFilter);\n    if (workersMaxFilter) filtersToSave.nombre_treballadors_lead_max = parseInt(workersMaxFilter);\n    if (capitalMinFilter) filtersToSave.capital_social_lead_min = parseInt(capitalMinFilter);\n    if (capitalMaxFilter) filtersToSave.capital_social_lead_max = parseInt(capitalMaxFilter);\n    if (idiomFilter) filtersToSave.idioma_preferent_lead = idiomFilter;\n    if (cotizaFilter !== \"Todos\") {\n      filtersToSave.cotitza_borsa_lead = cotizaFilter === \"true\";\n    }\n    if (temporadaFilter !== \"Todos\") {\n      filtersToSave.nomes_temporada_lead = temporadaFilter === \"true\";\n    }\n    if (ecologicaFilter !== \"Todos\") {\n      filtersToSave.conciencia_ecologica_lead = ecologicaFilter === \"true\";\n    }\n    if (solidariaFilter !== \"Todos\") {\n      filtersToSave.solidaria_social_lead = solidariaFilter === \"true\";\n    }\n    if (importaExportaFilter) filtersToSave.importa_exporta_lead = importaExportaFilter;\n    if (emailFilter) filtersToSave.email_lead = emailFilter;\n\n    // Verificar que haya al menos un filtro\n    if (Object.keys(filtersToSave).length === 0) {\n      setSaveFilterError(\"No hay filtros para guardar\");\n      return;\n    }\n    try {\n      // Guardar el grupo de filtros\n      FilterGroupService.save({\n        name: filterGroupName,\n        description: filterGroupDesc,\n        filters: filtersToSave\n      });\n\n      // Actualizar la lista de grupos\n      setFilterGroups(FilterGroupService.getAll());\n\n      // Limpiar y cerrar el modal\n      setFilterGroupName(\"\");\n      setFilterGroupDesc(\"\");\n      setSaveFilterError(\"\");\n      setShowSaveFilterModal(false);\n    } catch (error) {\n      console.error(\"Error al guardar el grupo de filtros:\", error);\n      setSaveFilterError(\"Error al guardar el grupo de filtros\");\n    }\n  };\n\n  // Manejar el formulario de b\u00FAsqueda\n  const handleSearch = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    // Log de cada par clave-valor enviado\n    for (let [key, value] of new FormData(form).entries()) {\n      console.log(\"Campo enviado:\", key, value);\n    }\n    submit(form, {\n      method: \"post\"\n    });\n  };\n\n  // Modal para guardar filtros\n  const renderSaveFilterModal = () => <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\r\n        <h3 className=\"text-xl font-semibold mb-4\">Guardar Filtros como Grupo</h3>\r\n        \r\n        {saveFilterError && <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\r\n            {saveFilterError}\r\n          </div>}\r\n        \r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\" htmlFor=\"filterGroupName\">\r\n              Nombre:\r\n            </label>\r\n            <input id=\"filterGroupName\" type=\"text\" className=\"w-full border rounded p-2\" value={filterGroupName} onChange={e => setFilterGroupName(e.target.value)} required />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\" htmlFor=\"filterGroupDesc\">\r\n              Descripci\u00F3n (opcional):\r\n            </label>\r\n            <textarea id=\"filterGroupDesc\" className=\"w-full border rounded p-2\" rows={3} value={filterGroupDesc} onChange={e => setFilterGroupDesc(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex justify-end space-x-4 mt-6\">\r\n          <button type=\"button\" onClick={() => {\n          setShowSaveFilterModal(false);\n          setFilterGroupName(\"\");\n          setFilterGroupDesc(\"\");\n          setSaveFilterError(\"\");\n        }} className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300\">\r\n            Cancelar\r\n          </button>\r\n          <button type=\"button\" onClick={handleSaveFilterGroup} className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\">\r\n            Guardar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>;\n\n  // Renderizado de la pesta\u00F1a de filtrado y selecci\u00F3n\n  const renderFilterTab = () => <div className=\"space-y-6\">\r\n      <h2 className=\"text-xl font-semibold\">Filtrado y Selecci\u00F3n de Leads</h2>\r\n      \r\n      {/* Secci\u00F3n de selecci\u00F3n de grupo de filtros */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow\">\r\n        <h3 className=\"text-lg font-medium mb-4\">Grupos de Filtros</h3>\r\n        <div className=\"flex space-x-4\">\r\n          <div className=\"flex-grow\">\r\n            <select className=\"w-full border rounded p-2\" value={selectedFilterGroupId} onChange={e => {\n            const id = e.target.value;\n            setSelectedFilterGroupId(id);\n            if (id) {\n              const group = FilterGroupService.getById(id);\n              if (group) {\n                applyFilterGroup(group);\n              }\n            }\n          }}>\r\n              <option value=\"\">Seleccionar grupo de filtros</option>\r\n              {(filterGroups || []).map(group => <option key={group.id} value={group.id}>\r\n                {group.name}\r\n              </option>)}\r\n            </select>\r\n          </div>\r\n          <Link to=\"/filter-groups\" className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 flex items-center\">\r\n            Gestionar Grupos\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Panel de filtros */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h3 className=\"text-lg font-medium\">Filtros</h3>\r\n          <button type=\"button\" onClick={() => setShowSaveFilterModal(true)} className=\"px-3 py-1 bg-green-600 text-white text-sm rounded hover:bg-green-700 flex items-center\" disabled={!hasFilters}>\r\n            <span className=\"mr-1\">\uD83D\uDCBE</span> Guardar estos filtros\r\n          </button>\r\n        </div>\r\n        \r\n        <Form method=\"post\" onSubmit={handleSearch}>\r\n          <input type=\"hidden\" name=\"intent\" value=\"search\" />\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {/* Primera columna */}\r\n            <div className=\"space-y-3\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Provincia:</label>\r\n                <select name=\"filter_provincia_lead\" className=\"w-full border rounded p-2\" value={provinciaFilter} onChange={e => setProvinciaFilter(e.target.value)}>\r\n                  <option value=\"\">Todas</option>\r\n                  {provincias.map(provincia => <option key={provincia} value={provincia}>\r\n                      {provincia}\r\n                    </option>)}\r\n                </select>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Poblaci\u00F3n:</label>\r\n                <select name=\"filter_poblacio_lead\" className=\"w-full border rounded p-2\" value={poblacionFilter} onChange={e => setPoblacionFilter(e.target.value)}>\r\n                  <option value=\"\">Todas</option>\r\n                  {poblaciones.map(poblacion => <option key={poblacion} value={poblacion}>\r\n                      {poblacion}\r\n                    </option>)}\r\n                </select>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Comarca:</label>\r\n                <select name=\"filter_comarca_lead\" className=\"w-full border rounded p-2\" value={comarcaFilter} onChange={e => setComarcaFilter(e.target.value)}>\r\n                  <option value=\"\">Todas</option>\r\n                  {comarcas.map(comarca => <option key={comarca} value={comarca}>\r\n                      {comarca}\r\n                    </option>)}\r\n                </select>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">A\u00F1o de creaci\u00F3n:</label>\r\n                <select name=\"filter_any_creacio_lead\" className=\"w-full border rounded p-2\" value={yearFilter} onChange={e => setYearFilter(e.target.value)}>\r\n                  <option value=\"\">Todos</option>\r\n                  {Array.from({\n                  length: 30\n                }, (_, i) => new Date().getFullYear() - i).map(year => <option key={year} value={year}>\r\n                      {year}\r\n                    </option>)}\r\n                </select>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">N\u00FAmero de trabajadores:</label>\r\n                <div className=\"grid grid-cols-2 gap-2\">\r\n                  <div>\r\n                    <label className=\"block text-xs text-gray-500 mb-1\">M\u00EDnimo:</label>\r\n                    <input type=\"number\" name=\"filter_nombre_treballadors_lead_min\" className=\"w-full border rounded p-2\" placeholder=\"M\u00EDn\" value={workersMinFilter} onChange={e => setWorkersMinFilter(e.target.value)} />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-xs text-gray-500 mb-1\">M\u00E1ximo:</label>\r\n                    <input type=\"number\" name=\"filter_nombre_treballadors_lead_max\" className=\"w-full border rounded p-2\" placeholder=\"M\u00E1x\" value={workersMaxFilter} onChange={e => setWorkersMaxFilter(e.target.value)} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Capital social:</label>\r\n                <div className=\"grid grid-cols-2 gap-2\">\r\n                  <div>\r\n                    <label className=\"block text-xs text-gray-500 mb-1\">M\u00EDnimo:</label>\r\n                    <input type=\"number\" name=\"filter_capital_social_lead_min\" className=\"w-full border rounded p-2\" placeholder=\"M\u00EDn\" value={capitalMinFilter} onChange={e => setCapitalMinFilter(e.target.value)} />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-xs text-gray-500 mb-1\">M\u00E1ximo:</label>\r\n                    <input type=\"number\" name=\"filter_capital_social_lead_max\" className=\"w-full border rounded p-2\" placeholder=\"M\u00E1x\" value={capitalMaxFilter} onChange={e => setCapitalMaxFilter(e.target.value)} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Segunda columna */}\r\n            <div className=\"space-y-3\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">CNAE:</label>\r\n                <input type=\"text\" name=\"filter_cnae_lead\" className=\"w-full border rounded p-2\" value={cnaeFilter} onChange={e => setCnaeFilter(e.target.value)} placeholder=\"C\u00F3digo CNAE\" />\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Email:</label>\r\n                <input type=\"text\" name=\"filter_email_lead\" className=\"w-full border rounded p-2\" value={emailFilter} onChange={e => setEmailFilter(e.target.value)} placeholder=\"Correo electr\u00F3nico\" />\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Tama\u00F1o de empresa:</label>\r\n                <select name=\"filter_mida_lead\" className=\"w-full border rounded p-2\" value={midaFilter} onChange={e => setMidaFilter(Number(e.target.value))}>\r\n                  <option value=\"0\">Todos</option>\r\n                  <option value=\"1\">Microempresa</option>\r\n                  <option value=\"2\">Peque\u00F1a</option>\r\n                  <option value=\"3\">Mediana</option>\r\n                  <option value=\"4\">Grande</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Estado:</label>\r\n                <div className=\"flex space-x-4\">\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_actiu_lead\" value=\"Todos\" checked={activoFilter === \"Todos\"} onChange={() => setActivoFilter(\"Todos\")} className=\"mr-1\" />\r\n                    <span>Todos</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_actiu_lead\" value=\"true\" checked={activoFilter === \"true\"} onChange={() => setActivoFilter(\"true\")} className=\"mr-1\" />\r\n                    <span>Activos</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_actiu_lead\" value=\"false\" checked={activoFilter === \"false\"} onChange={() => setActivoFilter(\"false\")} className=\"mr-1\" />\r\n                    <span>Inactivos</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Idioma preferente:</label>\r\n                <select name=\"filter_idioma_preferent_lead\" className=\"w-full border rounded p-2\" value={idiomFilter} onChange={e => setIdiomFilter(e.target.value)}>\r\n                  <option value=\"\">Todos</option>\r\n                  <option value=\"Catal\u00E1n\">Catal\u00E1n</option>\r\n                  <option value=\"Castellano\">Castellano</option>\r\n                  <option value=\"Ingl\u00E9s\">Ingl\u00E9s</option>\r\n                  <option value=\"Franc\u00E9s\">Franc\u00E9s</option>\r\n                  <option value=\"Otros\">Otros</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Cotiza en bolsa:</label>\r\n                <div className=\"flex space-x-4\">\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_cotitza_borsa_lead\" value=\"Todos\" checked={cotizaFilter === \"Todos\"} onChange={() => setCotizaFilter(\"Todos\")} className=\"mr-1\" />\r\n                    <span>Todos</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_cotitza_borsa_lead\" value=\"true\" checked={cotizaFilter === \"true\"} onChange={() => setCotizaFilter(\"true\")} className=\"mr-1\" />\r\n                    <span>S\u00ED</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_cotitza_borsa_lead\" value=\"false\" checked={cotizaFilter === \"false\"} onChange={() => setCotizaFilter(\"false\")} className=\"mr-1\" />\r\n                    <span>No</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Tercera columna */}\r\n            <div className=\"space-y-3\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Empresa de temporada:</label>\r\n                <div className=\"flex space-x-4\">\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_nomes_temporada_lead\" value=\"Todos\" checked={temporadaFilter === \"Todos\"} onChange={() => setTemporadaFilter(\"Todos\")} className=\"mr-1\" />\r\n                    <span>Todos</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_nomes_temporada_lead\" value=\"true\" checked={temporadaFilter === \"true\"} onChange={() => setTemporadaFilter(\"true\")} className=\"mr-1\" />\r\n                    <span>S\u00ED</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_nomes_temporada_lead\" value=\"false\" checked={temporadaFilter === \"false\"} onChange={() => setTemporadaFilter(\"false\")} className=\"mr-1\" />\r\n                    <span>No</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Conciencia ecol\u00F3gica:</label>\r\n                <div className=\"flex space-x-4\">\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_conciencia_ecologica_lead\" value=\"Todos\" checked={ecologicaFilter === \"Todos\"} onChange={() => setEcologicaFilter(\"Todos\")} className=\"mr-1\" />\r\n                    <span>Todos</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_conciencia_ecologica_lead\" value=\"true\" checked={ecologicaFilter === \"true\"} onChange={() => setEcologicaFilter(\"true\")} className=\"mr-1\" />\r\n                    <span>S\u00ED</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_conciencia_ecologica_lead\" value=\"false\" checked={ecologicaFilter === \"false\"} onChange={() => setEcologicaFilter(\"false\")} className=\"mr-1\" />\r\n                    <span>No</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Empresa solidaria:</label>\r\n                <div className=\"flex space-x-4\">\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_solidaria_social_lead\" value=\"Todos\" checked={solidariaFilter === \"Todos\"} onChange={() => setSolidariaFilter(\"Todos\")} className=\"mr-1\" />\r\n                    <span>Todos</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_solidaria_social_lead\" value=\"true\" checked={solidariaFilter === \"true\"} onChange={() => setSolidariaFilter(\"true\")} className=\"mr-1\" />\r\n                    <span>S\u00ED</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" name=\"filter_solidaria_social_lead\" value=\"false\" checked={solidariaFilter === \"false\"} onChange={() => setSolidariaFilter(\"false\")} className=\"mr-1\" />\r\n                    <span>No</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Importa/Exporta:</label>\r\n                <select name=\"filter_importa_exporta_lead\" className=\"w-full border rounded p-2\" value={importaExportaFilter} onChange={e => setImportaExportaFilter(e.target.value)}>\r\n                  <option value=\"\">Todos</option>\r\n                  <option value=\"Importa\">Importa</option>\r\n                  <option value=\"Exporta\">Exporta</option>\r\n                  <option value=\"Ambas\">Ambas</option>\r\n                  <option value=\"Ninguna\">Ninguna</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mt-6 flex space-x-4\">\r\n            <button type=\"submit\" className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 flex items-center\">\r\n              <span className=\"mr-1\">\uD83D\uDD0D</span> Buscar Leads\r\n            </button>\r\n            \r\n            <label className=\"inline-flex items-center\">\r\n              <input type=\"checkbox\" defaultChecked className=\"mr-2\" />\r\n              <span>Auto-seleccionar</span>\r\n            </label>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      \r\n      {/* Resultados de la b\u00FAsqueda */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow\">\r\n        <h3 className=\"text-lg font-medium mb-4\">\r\n          Leads disponibles para asignar ({filteredLeads.length})\r\n        </h3>\r\n        \r\n        {filteredLeads.length > 0 ? <>\r\n            <div className=\"flex space-x-4 mb-4\">\r\n              <button type=\"button\" onClick={selectAllLeads} className=\"px-3 py-1 bg-gray-200 rounded hover:bg-gray-300\">\r\n                Seleccionar todos\r\n              </button>\r\n              <button type=\"button\" onClick={deselectAllLeads} className=\"px-3 py-1 bg-gray-200 rounded hover:bg-gray-300\">\r\n                Deseleccionar todos\r\n              </button>\r\n              <button type=\"button\" onClick={toggleAllLeads} className=\"px-3 py-1 bg-gray-200 rounded hover:bg-gray-300\">\r\n                Invertir selecci\u00F3n\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Empresa</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">CNAE</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Provincia</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Poblaci\u00F3n</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tama\u00F1o</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Seleccionar</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {filteredLeads.map(lead => <tr key={lead.id_lead} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.id_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.nom_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.nom_empresarial_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.email_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.cnae_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.provincia_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{lead.poblacio_lead}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{formatMidaLead(lead.mida_lead)}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <input type=\"checkbox\" checked={selectedLeadIds.includes(lead.id_lead)} onChange={e => handleLeadSelection(lead.id_lead, e.target.checked)} />\r\n                      </td>\r\n                    </tr>)}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            <div className=\"mt-4\">\r\n              <div className=\"bg-blue-100 p-3 rounded\">\r\n                <strong>Leads seleccionados:</strong> {selectedLeadIds.length}\r\n              </div>\r\n              {selectedLeadIds.length > 0 && <div className=\"mt-2 text-green-600 flex items-center\">\r\n                  <span className=\"mr-1\">\u2705</span> Has seleccionado leads. Puedes continuar a la pesta\u00F1a de asignaci\u00F3n.\r\n                </div>}\r\n            </div>\r\n          </> : hasFilters ? <div className=\"bg-yellow-100 p-3 rounded\">\r\n            No se encontraron leads que coincidan con los filtros.\r\n          </div> : <div className=\"bg-yellow-100 p-3 rounded\">\r\n            No hay leads disponibles. Utiliza los filtros para buscar leads.\r\n          </div>}\r\n      </div>\r\n      \r\n      <button type=\"button\" onClick={() => setActiveTab(\"asignacion\")} className=\"w-full px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\" disabled={selectedLeadIds.length === 0}>\r\n        Continuar a Asignaci\u00F3n \u27A1\uFE0F\r\n      </button>\r\n      \r\n      {showSaveFilterModal && renderSaveFilterModal()}\r\n    </div>;\n\n  // Renderizado de la pesta\u00F1a de asignaci\u00F3n de leads a agentes\n  const renderAssignmentTab = () => <div className=\"space-y-6\">\r\n      <h2 className=\"text-xl font-semibold\">Asignaci\u00F3n de Leads a Agentes</h2>\r\n      \r\n      {/* Mensaje de modo autom\u00E1tico si est\u00E1 activo */}\r\n      {autoAssignMode && <div className=\"bg-blue-100 p-3 rounded mb-4\">\r\n          <p className=\"font-medium text-blue-800\">\r\n            Modo de asignaci\u00F3n autom\u00E1tica activo. {selectedLeadIds.length} leads se asignar\u00E1n a los agentes y campa\u00F1as seleccionados.\r\n          </p>\r\n        </div>}\r\n      \r\n      {selectedLeadIds.length === 0 ? <div className=\"bg-yellow-100 p-4 rounded\">\r\n          \u26A0\uFE0F No hay leads seleccionados. Por favor, vuelve a la pesta\u00F1a de filtrado para seleccionar leads.\r\n        </div> : <>\r\n          <div className=\"bg-blue-100 p-3 rounded\">\r\n            <strong>Leads seleccionados:</strong> {selectedLeadIds.length}\r\n          </div>\r\n          \r\n          {/* Tabla resumen de leads seleccionados */}\r\n          <div className=\"bg-white p-4 rounded-lg shadow\">\r\n            <h3 className=\"text-lg font-medium mb-4\">Leads seleccionados</h3>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Empresa</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Provincia</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Poblaci\u00F3n</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tama\u00F1o</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {filteredLeads.filter(lead => selectedLeadIds.includes(lead.id_lead)).slice(0, 50) // Limitar a 50 para evitar problemas de rendimiento\n              .map(lead => <tr key={lead.id_lead} className=\"hover:bg-gray-50\">\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{lead.id_lead}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{lead.nom_lead}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{lead.nom_empresarial_lead}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{lead.email_lead}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{lead.provincia_lead}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{lead.poblacio_lead}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{formatMidaLead(lead.mida_lead)}</td>\r\n                      </tr>)}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Formulario de asignaci\u00F3n */}\r\n          <div className=\"bg-white p-4 rounded-lg shadow\">\r\n            <h3 className=\"text-lg font-medium mb-4\">Configuraci\u00F3n de la Asignaci\u00F3n</h3>\r\n            \r\n            <Form method=\"post\" id=\"assignForm\">\r\n              <input type=\"hidden\" name=\"intent\" value=\"assign\" />\r\n              {/* Inputs ocultos para los IDs de los leads seleccionados */}\r\n              {selectedLeadIds.map(leadId => <input key={leadId} type=\"hidden\" name=\"leadIds\" value={leadId} />)}\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                {/* Selecci\u00F3n de agentes */}\r\n                <div>\r\n                  <h4 className=\"text-md font-medium mb-3\">Selecci\u00F3n de Agentes</h4>\r\n                  <div className=\"border p-3 rounded\">\r\n                    <div className=\"mb-4\">\r\n                      <label className=\"block text-sm font-medium mb-1\">Seleccionar Agente(s):</label>\r\n                      <div className=\"max-h-48 overflow-y-auto border rounded\">\r\n                        {agents.map(agent => <div key={agent.id_agent} className=\"p-2 hover:bg-gray-100\">\r\n                            <label className=\"flex items-center space-x-2\">\r\n                              <input type=\"checkbox\" name=\"agentIds\" value={agent.id_agent} defaultChecked={preselectedAgentIds.includes(agent.id_agent)} />\r\n                              <span>{agent.nom_agent}</span>\r\n                            </label>\r\n                          </div>)}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <h5 className=\"text-md font-medium mb-2\">M\u00E9todo de Distribuci\u00F3n</h5>\r\n                      <div className=\"space-y-2\">\r\n                        <label className=\"flex items-center space-x-2\">\r\n                          <input type=\"radio\" name=\"distribucion\" value=\"equitativo\" defaultChecked />\r\n                          <span>Equitativo (Round-Robin)</span>\r\n                        </label>\r\n                        <label className=\"flex items-center space-x-2\">\r\n                          <input type=\"radio\" name=\"distribucion\" value=\"todos\" />\r\n                          <span>Todos los leads a todos los agentes</span>\r\n                        </label>\r\n                        <div className=\"text-xs text-gray-500 mt-1\">\r\n                          Equitativo: distribuye los leads de forma balanceada entre los agentes seleccionados.\r\n                          <br />\r\n                          Todos a todos: asigna cada lead a todos los agentes seleccionados.\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Configuraci\u00F3n de asignaciones */}\r\n                <div>\r\n                  <h4 className=\"text-md font-medium mb-3\">Configuraci\u00F3n de Asignaciones</h4>\r\n                  <div className=\"border p-3 rounded\">\r\n                    <div className=\"mb-4\">\r\n                      <label className=\"block text-sm font-medium mb-1\">Seleccionar Campa\u00F1a(s):</label>\r\n                      <div className=\"max-h-48 overflow-y-auto border rounded\">\r\n                        {campanyas.map(campanya => <div key={campanya.id_campanya} className=\"p-2 hover:bg-gray-100\">\r\n                            <label className=\"flex items-center space-x-2\">\r\n                              <input type=\"checkbox\" name=\"campanyaIds\" value={campanya.id_campanya} defaultChecked={preselectedCampanyaIds.includes(campanya.id_campanya)} />\r\n                              <span>{campanya.id_campanya} - {campanya.campanya_nom}</span>\r\n                            </label>\r\n                          </div>)}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"space-y-4\">\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium mb-1\">Prioridad para las asignaciones:</label>\r\n                        <select name=\"prioritat\" className=\"w-full border rounded p-2\" defaultValue=\"3\">\r\n                          <option value=\"1\">1 - Muy baja</option>\r\n                          <option value=\"2\">2 - Baja</option>\r\n                          <option value=\"3\">3 - Media</option>\r\n                          <option value=\"4\">4 - Alta</option>\r\n                          <option value=\"5\">5 - Muy alta</option>\r\n                        </select>\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label className=\"block text-sm font-medium mb-1\">Potencial para las asignaciones:</label>\r\n                        <select name=\"potencial\" className=\"w-full border rounded p-2\" defaultValue=\"3\">\r\n                          <option value=\"1\">1 - Muy bajo</option>\r\n                          <option value=\"2\">2 - Bajo</option>\r\n                          <option value=\"3\">3 - Medio</option>\r\n                          <option value=\"4\">4 - Alto</option>\r\n                          <option value=\"5\">5 - Muy alto</option>\r\n                        </select>\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label className=\"block text-sm font-medium mb-1\">Observaciones:</label>\r\n                        <textarea name=\"observaciones\" className=\"w-full border rounded p-2\" rows={3} placeholder=\"Observaciones para todas las asignaciones\" defaultValue={autoAssignMode ? \"Asignaci\u00F3n autom\u00E1tica desde grupos de filtros\" : \"\"}></textarea>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"mt-6\">\r\n                <h3 className=\"text-lg font-medium mb-4\">Ejecutar Asignaci\u00F3n</h3>\r\n                <div className=\"bg-blue-50 p-4 rounded mb-4\">\r\n                  <h4 className=\"font-medium mb-2\">Resumen de la asignaci\u00F3n:</h4>\r\n                  <ul className=\"list-disc pl-6 space-y-1\">\r\n                    <li>Leads seleccionados: {selectedLeadIds.length}</li>\r\n                    <li>Agentes y campa\u00F1as: Se utilizar\u00E1n los seleccionados en el formulario</li>\r\n                  </ul>\r\n                </div>\r\n                \r\n                <button type=\"submit\" className=\"w-full px-4 py-3 bg-green-600 text-white rounded hover:bg-green-700 flex items-center justify-center\" disabled={navigation.state === \"submitting\"}>\r\n                  <span className=\"mr-2\">\uD83D\uDCBE</span> \r\n                  {navigation.state === \"submitting\" ? \"Asignando...\" : \"Realizar Asignaci\u00F3n Masiva\"}\r\n                </button>\r\n              </div>\r\n            </Form>\r\n            \r\n            {actionData?.success && <div className=\"mt-6 bg-green-100 p-4 rounded\">\r\n                <h4 className=\"font-medium mb-2\">Resultado de la asignaci\u00F3n:</h4>\r\n                <div className=\"text-green-700 mb-2\">\r\n                  \u2705 {actionData.totalSuccess} asignaciones creadas correctamente\r\n                </div>\r\n                {actionData.totalError && actionData.totalError > 0 && <div className=\"text-red-700 mb-2\">\r\n                    \u274C {actionData.totalError} asignaciones no pudieron ser creadas\r\n                  </div>}\r\n                <button type=\"button\" onClick={() => {\n            setActiveTab(\"filtrado\");\n            setSelectedLeadIds([]);\n          }} className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\">\r\n                  \uD83D\uDD04 Volver al Filtrado y Limpiar Selecci\u00F3n\r\n                </button>\r\n              </div>}\r\n          </div>\r\n        </>}\r\n      \r\n      <button type=\"button\" onClick={() => setActiveTab(\"filtrado\")} className=\"w-full px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\">\r\n        \u2B05\uFE0F Volver a Filtrado\r\n      </button>\r\n    </div>;\n  return <div className=\"p-6 max-w-7xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Asignaci\u00F3n Masiva de Leads</h1>\r\n      \r\n      {/* Pesta\u00F1as de navegaci\u00F3n */}\r\n      <div className=\"flex border-b mb-6\">\r\n        <button className={`px-4 py-2 font-medium ${activeTab === \"filtrado\" ? \"border-b-2 border-blue-500 text-blue-600\" : \"text-gray-500 hover:text-gray-700\"}`} onClick={() => setActiveTab(\"filtrado\")}>\r\n          1\uFE0F\u20E3 Filtrado y Selecci\u00F3n\r\n        </button>\r\n        <button className={`px-4 py-2 font-medium ${activeTab === \"asignacion\" ? \"border-b-2 border-blue-500 text-blue-600\" : \"text-gray-500 hover:text-gray-700\"}`} onClick={() => setActiveTab(\"asignacion\")} disabled={selectedLeadIds.length === 0}>\r\n          2\uFE0F\u20E3 Asignaci\u00F3n a Agentes\r\n        </button>\r\n      </div>\r\n      \r\n      {activeTab === \"filtrado\" ? renderFilterTab() : renderAssignmentTab()}\r\n    </div>;\n}\n_s(BulkAssignmentPage, \"2nK5zT3xeHE9fRi4B8smGZxaOdo=\", false, function () {\n  return [useLoaderData, useActionData, useSubmit, useNavigation, useSearchParams];\n});\n_c = BulkAssignmentPage;\nvar _c;\n$RefreshReg$(_c, \"BulkAssignmentPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
