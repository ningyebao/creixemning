{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx", "../../../node_modules/@heroicons/react/24/outline/esm/BriefcaseIcon.js", "../../../node_modules/@heroicons/react/24/outline/esm/ChartPieIcon.js", "../../../node_modules/@heroicons/react/24/outline/esm/ClipboardDocumentListIcon.js", "../../../node_modules/@heroicons/react/24/outline/esm/UsersIcon.js", "../../../app/components/dashboard/SummaryCard.tsx", "../../../node_modules/react-chartjs-2/src/utils.ts", "../../../node_modules/react-chartjs-2/src/chart.tsx", "../../../node_modules/react-chartjs-2/src/typedCharts.tsx", "../../../app/components/dashboard/AssignmentsStatusChart.tsx", "../../../app/components/dashboard/LeadsOverTimeChart.tsx", "../../../app/components/dashboard/AgentPerformanceChart.tsx", "../../../app/components/dashboard/ChartLoading.tsx", "../../../app/components/dashboard/ChartError.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\_index.tsx\");\n  import.meta.hot.lastModified = \"1748256791904.8262\";\n}\n// REMIX HMR END\n\n// app/routes/dashboard.tsx\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, useNavigation } from \"@remix-run/react\";\nimport { UsersIcon, ClipboardDocumentListIcon, BriefcaseIcon, ChartPieIcon // Cambiado para asignaciones totales\n} from \"@heroicons/react/24/outline\";\n\n// Importa tus servicios y tipos\nimport { LeadService } from \"~/services/leads.service\";\nimport { AgentsService } from \"~/services/agents.service\";\nimport { CampanyaService } from \"~/services/campanya.service\";\nimport { AssignacioService } from \"~/services/assignacio.service\";\nimport { ASSIGNMENT_STATUSES } from \"~/lib/types\";\n\n// Importa componentes del dashboard\nimport { SummaryCard } from \"~/components/dashboard/SummaryCard\";\nimport { AssignmentsStatusChart } from \"~/components/dashboard/AssignmentsStatusChart\";\nimport { LeadsOverTimeChart } from \"~/components/dashboard/LeadsOverTimeChart\";\nimport { AgentPerformanceChart } from \"~/components/dashboard/AgentPerformanceChart\";\nimport { ChartLoading } from \"~/components/dashboard/ChartLoading\";\nimport { ChartError } from \"~/components/dashboard/ChartError\"; // Necesitar\u00EDas usar esto si un gr\u00E1fico falla individualmente\n\n// Tipos para los datos de los gr\u00E1ficos\n\nexport const meta = () => {\n  return [{\n    title: \"Panel de Control Avanzado | Mi App\"\n  }];\n};\nexport async function loader({\n  request\n}) {\n  try {\n    const [leads, agentes, campanas, asignaciones] = await Promise.all([LeadService.getAll(0, 50000),\n    // Aumenta el l\u00EDmite si es necesario\n    AgentsService.getAll(), CampanyaService.getAll(), AssignacioService.getAll(0, 50000)]);\n\n    // 1. Estad\u00EDsticas de Resumen\n    const summaryStats = {\n      totalLeads: leads.length,\n      totalAgentes: agentes.length,\n      campanasActivas: campanas.filter(c => c.activa_campanya).length,\n      totalAsignaciones: asignaciones.length\n    };\n\n    // 2. Datos para Gr\u00E1fico de Estado de Asignaciones (Barra)\n    const statusCounts = {};\n    ASSIGNMENT_STATUSES.forEach(status => statusCounts[status] = 0);\n    asignaciones.forEach(asig => {\n      statusCounts[asig.estat_fitxes_assignacions] = (statusCounts[asig.estat_fitxes_assignacions] || 0) + 1;\n    });\n    const assignmentsStatusData = {\n      labels: Object.keys(statusCounts),\n      datasets: [{\n        label: 'Cantidad de Asignaciones',\n        data: Object.values(statusCounts)\n        // Los colores se aplicar\u00E1n en el componente del gr\u00E1fico\n      }]\n    };\n\n    // 3. Datos para Gr\u00E1fico de Prospectos (Leads) Creados por Mes (L\u00EDnea)\n    const leadsByMonth = {};\n    leads.forEach(lead => {\n      if (lead.fecha_registro) {\n        try {\n          const date = new Date(lead.fecha_registro);\n          const monthYear = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`; // Formato YYYY-MM\n          leadsByMonth[monthYear] = (leadsByMonth[monthYear] || 0) + 1;\n        } catch (e) {\n          console.warn(`Fecha de registro inv\u00E1lida para lead ${lead.id_lead}: ${lead.fecha_registro}`);\n        }\n      }\n    });\n    const sortedMonths = Object.keys(leadsByMonth).sort();\n    const leadsOverTimeData = {\n      labels: sortedMonths.map(monthYear => {\n        // Formatear para visualizaci\u00F3n si es necesario\n        const [year, month] = monthYear.split('-');\n        return `${new Date(Number(year), Number(month) - 1).toLocaleString('es-ES', {\n          month: 'short'\n        })} ${year.slice(-2)}`;\n      }),\n      datasets: [{\n        label: 'Prospectos Creados',\n        data: sortedMonths.map(month => leadsByMonth[month])\n      }]\n    };\n\n    // 4. Datos para Gr\u00E1fico de Rendimiento de Agentes (Dona)\n    const assignmentsPerAgent = {};\n    asignaciones.forEach(asig => {\n      assignmentsPerAgent[asig.id_agents] = (assignmentsPerAgent[asig.id_agents] || 0) + 1;\n    });\n    const agentLabels = [];\n    const agentDataValues = [];\n    const agentMap = new Map(agentes.map(agent => [agent.id_agent, agent.nom_agent]));\n    for (const agentId in assignmentsPerAgent) {\n      agentLabels.push(agentMap.get(Number(agentId)) || `Agente ID: ${agentId}`);\n      agentDataValues.push(assignmentsPerAgent[agentId]);\n    }\n    const agentPerformanceData = {\n      labels: agentLabels,\n      datasets: [{\n        label: 'Asignaciones',\n        data: agentDataValues\n      }]\n    };\n    return json({\n      summaryStats,\n      assignmentsStatusData,\n      leadsOverTimeData,\n      agentPerformanceData\n      // rawData: { leads, agentes, campanas, asignaciones } // Descomentar si es necesario\n    });\n  } catch (error) {\n    console.error(\"Error en el loader del Dashboard Avanzado:\", error);\n    // En un caso real, podr\u00EDas devolver datos parciales o un estado de error m\u00E1s espec\u00EDfico.\n    // Este throw har\u00E1 que se active el ErrorBoundary de la ruta.\n    throw new Response(\"No se pudieron cargar los datos del panel de control. Int\u00E9ntelo m\u00E1s tarde.\", {\n      status: 500\n    });\n  }\n}\nexport default function AdvancedDashboardPage() {\n  _s();\n  const data = useLoaderData(); // Obtiene los datos directamente\n  const navigation = useNavigation();\n\n  // Manejo de estado de carga global para toda la p\u00E1gina (si es necesario)\n  if (navigation.state === \"loading\" && navigation.location.pathname === \"/dashboard\") {\n    // Podr\u00EDas mostrar un esqueleto de p\u00E1gina completa aqu\u00ED\n    return <div className=\"min-h-screen flex items-center justify-center\"><ChartLoading /></div>;\n  }\n\n  // Si data no est\u00E1 definido (por un error que no lanz\u00F3 una Response, aunque el loader actual s\u00ED lo hace)\n  // O si necesitas manejar errores devueltos como parte del JSON normal (no es el caso aqu\u00ED con el throw)\n  if (!data) {\n    return <ChartError message=\"Los datos del panel de control no est\u00E1n disponibles.\" />;\n  }\n  const {\n    summaryStats,\n    assignmentsStatusData,\n    leadsOverTimeData,\n    agentPerformanceData\n  } = data;\n  const summaryItems = [{\n    title: \"Total Prospectos\",\n    value: summaryStats.totalLeads,\n    icon: ClipboardDocumentListIcon,\n    bgColor: \"bg-sky-500\"\n  }, {\n    title: \"Total Agentes\",\n    value: summaryStats.totalAgentes,\n    icon: UsersIcon,\n    bgColor: \"bg-emerald-500\"\n  }, {\n    title: \"Campa\u00F1as Activas\",\n    value: summaryStats.campanasActivas,\n    icon: BriefcaseIcon,\n    bgColor: \"bg-amber-500\"\n  }, {\n    title: \"Total Asignaciones\",\n    value: summaryStats.totalAsignaciones,\n    icon: ChartPieIcon,\n    bgColor: \"bg-purple-500\"\n  }];\n  return <div className=\"p-4 md:p-6 space-y-6 bg-slate-50 min-h-screen\">\r\n      <header className=\"pb-4 border-b border-slate-200\">\r\n        <h1 className=\"text-3xl font-bold text-slate-800\">Creixem DashBoard</h1>\r\n        <p className=\"text-sm text-slate-500\">Resumen general</p>\r\n      </header>\r\n\r\n      {/* Secci\u00F3n de Tarjetas de Resumen */}\r\n      <section className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-5\">\r\n        {summaryItems.map(item => <SummaryCard key={item.title} {...item} />)}\r\n      </section>\r\n\r\n      {/* Secci\u00F3n de Gr\u00E1ficos Principales (2 columnas) */}\r\n      <section className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <div className=\"bg-white p-4 sm:p-6 rounded-xl shadow-lg h-[450px] sm:h-[500px] flex flex-col\">\r\n          {assignmentsStatusData ? <AssignmentsStatusChart data={assignmentsStatusData} /> : <ChartError message=\"No hay datos para el estado de asignaciones.\" />}\r\n        </div>\r\n        <div className=\"bg-white p-4 sm:p-6 rounded-xl shadow-lg h-[450px] sm:h-[500px] flex flex-col\">\r\n          {leadsOverTimeData && leadsOverTimeData.labels && leadsOverTimeData.labels.length > 0 ? <LeadsOverTimeChart data={leadsOverTimeData} /> : <div className=\"h-full flex flex-col items-center justify-center text-gray-500 p-4\">\r\n                <p className=\"font-semibold\">Prospectos (Leads) por Mes</p>\r\n                <p>No hay suficientes datos de prospectos para mostrar la tendencia.</p>\r\n            </div>}\r\n        </div>\r\n      </section>\r\n\r\n      {/* Secci\u00F3n de Gr\u00E1ficos Secundarios (ej. rendimiento de agentes) */}\r\n      <section className=\"grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 gap-6\">\r\n         <div className=\"bg-white p-4 sm:p-6 rounded-xl shadow-lg h-[450px] sm:h-[500px] md:max-w-2xl lg:max-w-3xl mx-auto w-full flex flex-col\">\r\n          {agentPerformanceData && agentPerformanceData.labels && agentPerformanceData.labels.length > 0 ? <AgentPerformanceChart data={agentPerformanceData} /> : <div className=\"h-full flex flex-col items-center justify-center text-gray-500 p-4\">\r\n                <p className=\"font-semibold\">Asignaciones por Agente</p>\r\n                <p>No hay datos de asignaciones por agente para mostrar.</p>\r\n            </div>}\r\n        </div>\r\n      </section>\r\n\r\n      {/* M\u00E1s secciones o tablas de datos podr\u00EDan ir aqu\u00ED */}\r\n\r\n    </div>;\n}\n\n// ErrorBoundary para la ruta del dashboard\n_s(AdvancedDashboardPage, \"kIyfHko9Qfy095I2sKlcMTHWjHQ=\", false, function () {\n  return [useLoaderData, useNavigation];\n});\n_c = AdvancedDashboardPage;\nexport function ErrorBoundary() {\n  // Aqu\u00ED podr\u00EDas usar useRouteError para obtener m\u00E1s detalles del error si es necesario\n  return <div className=\"p-8 text-center bg-red-50 min-h-screen flex flex-col justify-center items-center\">\r\n      <BriefcaseIcon className=\"h-16 w-16 text-red-400 mb-4\" /> {/* Un icono gen\u00E9rico */}\r\n      <h1 className=\"text-2xl font-bold text-red-700\">\u00A1Ups! Algo sali\u00F3 mal.</h1>\r\n      <p className=\"mt-2 text-red-600\">\r\n        No pudimos cargar el panel de control en este momento.\r\n      </p>\r\n      <p className=\"mt-1 text-sm text-gray-500\">\r\n        Por favor, intenta refrescar la p\u00E1gina o vuelve a intentarlo m\u00E1s tarde.\r\n      </p>\r\n      {/* Podr\u00EDas a\u00F1adir un bot\u00F3n para reintentar o ir a la p\u00E1gina de inicio */}\r\n    </div>;\n}\n_c2 = ErrorBoundary;\nvar _c, _c2;\n$RefreshReg$(_c, \"AdvancedDashboardPage\");\n$RefreshReg$(_c2, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "import * as React from \"react\";\nfunction BriefcaseIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 0 0 .75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 0 0-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0 1 12 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 0 1-.673-.38m0 0A2.18 2.18 0 0 1 3 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 0 1 3.413-.387m7.5 0V5.25A2.25 2.25 0 0 0 13.5 3h-3a2.25 2.25 0 0 0-2.25 2.25v.894m7.5 0a48.667 48.667 0 0 0-7.5 0M12 12.75h.008v.008H12v-.008Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BriefcaseIcon);\nexport default ForwardRef;", "import * as React from \"react\";\nfunction ChartPieIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 6a7.5 7.5 0 1 0 7.5 7.5h-7.5V6Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M13.5 10.5H21A7.5 7.5 0 0 0 13.5 3v7.5Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChartPieIcon);\nexport default ForwardRef;", "import * as React from \"react\";\nfunction ClipboardDocumentListIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 0 0 2.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 0 0-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75 2.25 2.25 0 0 0-.1-.664m-5.8 0A2.251 2.251 0 0 1 13.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25ZM6.75 12h.008v.008H6.75V12Zm0 3h.008v.008H6.75V15Zm0 3h.008v.008H6.75V18Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClipboardDocumentListIcon);\nexport default ForwardRef;", "import * as React from \"react\";\nfunction UsersIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 19.128a9.38 9.38 0 0 0 2.625.372 9.337 9.337 0 0 0 4.121-.952 4.125 4.125 0 0 0-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 0 1 8.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0 1 11.964-3.07M12 6.375a3.375 3.375 0 1 1-6.75 0 3.375 3.375 0 0 1 6.75 0Zm8.25 2.25a2.625 2.625 0 1 1-5.25 0 2.625 2.625 0 0 1 5.25 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(UsersIcon);\nexport default ForwardRef;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\dashboard\\\\\\\\SummaryCard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\dashboard\\\\SummaryCard.tsx\");\n  import.meta.hot.lastModified = \"1748255099519.3032\";\n}\n// REMIX HMR END\n\nexport function SummaryCard({\n  title,\n  value,\n  icon: Icon,\n  iconColor = \"text-white\",\n  bgColor = \"bg-blue-500\",\n  textColor = \"text-gray-800\"\n}) {\n  return <div className=\"bg-white p-5 rounded-xl shadow-lg flex items-center space-x-4 hover:shadow-xl transition-shadow duration-300\">\r\n      <div className={`p-3 rounded-full ${bgColor} ${iconColor}`}>\r\n        <Icon className=\"h-7 w-7\" />\r\n      </div>\r\n      <div>\r\n        <p className=\"text-sm text-gray-500 font-medium\">{title}</p>\r\n        <p className={`text-2xl font-semibold ${textColor}`}>{value}</p>\r\n      </div>\r\n    </div>;\n}\n_c = SummaryCard;\nvar _c;\n$RefreshReg$(_c, \"SummaryCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n", "import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n", "import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\dashboard\\\\\\\\AssignmentsStatusChart.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\dashboard\\\\AssignmentsStatusChart.tsx\");\n  import.meta.hot.lastModified = \"1748255231003.4963\";\n}\n// REMIX HMR END\n\nimport { Bar } from 'react-chartjs-2';\nconst statusColors = {\n  \"Pendiente\": 'rgba(54, 162, 235, 0.7)',\n  // Azul\n  \"En progreso\": 'rgba(255, 206, 86, 0.7)',\n  // Amarillo\n  \"Completada\": 'rgba(75, 192, 192, 0.7)',\n  // Verde\n  \"Cancelada\": 'rgba(255, 99, 132, 0.7)',\n  // Rojo\n  \"Default\": 'rgba(153, 102, 255, 0.7)' // Morado para otros\n};\nexport function AssignmentsStatusChart({\n  data: chartDataInput\n}) {\n  const data = {\n    labels: chartDataInput.labels,\n    datasets: chartDataInput.datasets.map(dataset => ({\n      ...dataset,\n      backgroundColor: chartDataInput.labels?.map(label => statusColors[label] || statusColors.Default),\n      borderColor: chartDataInput.labels?.map(label => (statusColors[label] || statusColors.Default).replace('0.7', '1')),\n      borderWidth: 1,\n      hoverBackgroundColor: chartDataInput.labels?.map(label => (statusColors[label] || statusColors.Default).replace('0.7', '0.9')),\n      borderRadius: 4\n    }))\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          usePointStyle: true,\n          boxWidth: 8 // Ancho de la caja de color\n        }\n      },\n      title: {\n        display: true,\n        text: 'Distribuci\u00F3n de Estados de Asignaciones',\n        font: {\n          size: 18,\n          weight: 'bold'\n        },\n        color: '#374151' // text-gray-700\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleFont: {\n          size: 14,\n          weight: 'bold'\n        },\n        bodyFont: {\n          size: 12\n        },\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += context.parsed.y;\n            }\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          precision: 0,\n          // Para asegurar n\u00FAmeros enteros en el eje Y\n          color: '#4B5563' // text-gray-600\n        },\n        grid: {\n          color: '#E5E7EB' // text-gray-200\n        },\n        title: {\n          display: true,\n          text: 'Cantidad de Asignaciones',\n          font: {\n            size: 14\n          },\n          color: '#374151'\n        }\n      },\n      x: {\n        ticks: {\n          color: '#4B5563'\n        },\n        grid: {\n          display: false // Ocultar rejilla vertical para un look m\u00E1s limpio\n        }\n      }\n    },\n    animation: {\n      duration: 1000,\n      easing: 'easeInOutQuart'\n    }\n  };\n  return <Bar options={options} data={data} />;\n}\n_c = AssignmentsStatusChart;\nvar _c;\n$RefreshReg$(_c, \"AssignmentsStatusChart\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\dashboard\\\\\\\\LeadsOverTimeChart.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\dashboard\\\\LeadsOverTimeChart.tsx\");\n  import.meta.hot.lastModified = \"1748255219850.2278\";\n}\n// REMIX HMR END\n\nimport { Line } from 'react-chartjs-2';\nexport function LeadsOverTimeChart({\n  data: chartDataInput\n}) {\n  const data = {\n    labels: chartDataInput.labels,\n    datasets: chartDataInput.datasets.map(dataset => ({\n      ...dataset,\n      fill: true,\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      pointBackgroundColor: 'rgba(75, 192, 192, 1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(75, 192, 192, 1)',\n      tension: 0.3 // Para curvas suaves\n    }))\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Tendencia de Creaci\u00F3n de Prospectos (Leads)',\n        font: {\n          size: 18,\n          weight: 'bold'\n        },\n        color: '#374151'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          precision: 0,\n          color: '#4B5563'\n        },\n        grid: {\n          color: '#E5E7EB'\n        },\n        title: {\n          display: true,\n          text: 'Cantidad de Leads',\n          font: {\n            size: 14\n          },\n          color: '#374151'\n        }\n      },\n      x: {\n        ticks: {\n          color: '#4B5563'\n        },\n        grid: {\n          display: false\n        }\n      }\n    }\n  };\n  return <Line options={options} data={data} />;\n}\n_c = LeadsOverTimeChart;\nvar _c;\n$RefreshReg$(_c, \"LeadsOverTimeChart\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\dashboard\\\\\\\\AgentPerformanceChart.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\dashboard\\\\AgentPerformanceChart.tsx\");\n  import.meta.hot.lastModified = \"1748255684599.567\";\n}\n// REMIX HMR END\n\nimport { Doughnut } from 'react-chartjs-2';\n// Importa TooltipItem\n\n// Paleta de colores para el gr\u00E1fico de dona\nconst doughnutColors = ['rgba(255, 99, 132, 0.8)',\n// Rojo\n'rgba(54, 162, 235, 0.8)',\n// Azul\n'rgba(255, 206, 86, 0.8)',\n// Amarillo\n'rgba(75, 192, 192, 0.8)',\n// Verde-Azulado\n'rgba(153, 102, 255, 0.8)',\n// Morado\n'rgba(255, 159, 64, 0.8)',\n// Naranja\n'rgba(199, 199, 199, 0.8)',\n// Gris\n'rgba(83, 102, 255, 0.8)',\n// Azul \u00CDndigo\n'rgba(102, 255, 83, 0.8)',\n// Verde Lima\n'rgba(255, 83, 102, 0.8)' // Rosa\n];\nexport function AgentPerformanceChart({\n  data: chartDataInput\n}) {\n  const data = {\n    labels: chartDataInput.labels,\n    datasets: chartDataInput.datasets.map(dataset => ({\n      ...dataset,\n      backgroundColor: doughnutColors.slice(0, chartDataInput.labels?.length),\n      borderColor: '#ffffff',\n      // Borde blanco para separar segmentos\n      borderWidth: 2,\n      hoverOffset: 8 // Efecto al pasar el mouse\n    }))\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'right',\n        // Leyenda a la derecha para m\u00E1s espacio\n        labels: {\n          usePointStyle: true,\n          padding: 20,\n          // Espacio para la leyenda\n          boxWidth: 10\n        }\n      },\n      title: {\n        display: true,\n        text: 'Asignaciones por Agente',\n        font: {\n          size: 18,\n          weight: 'bold'\n        },\n        // Especificar tipo para 'weight'\n        color: '#374151'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            // Tipar 'context'\n            const label = context.label || '';\n            const value = context.parsed || 0;\n            let total = 0;\n            // Calcula el total sumando todos los valores del dataset actual\n            if (context.chart.data.datasets[context.datasetIndex] && context.chart.data.datasets[context.datasetIndex].data) {\n              const currentDatasetData = context.chart.data.datasets[context.datasetIndex].data;\n              total = currentDatasetData.reduce((acc, curr) => acc + (typeof curr === 'number' ? curr : 0), 0);\n            }\n\n            // Evitar divisi\u00F3n por cero si el total es 0 (aunque es poco probable si hay datos)\n            const percentage = total > 0 ? (value / total * 100).toFixed(1) + '%' : '0%';\n            return `${label}: ${value} (${percentage})`;\n          }\n        }\n      }\n    },\n    cutout: '50%' // Hace que sea un gr\u00E1fico de dona en lugar de pie\n  };\n  return <Doughnut options={options} data={data} />;\n}\n_c = AgentPerformanceChart;\nvar _c;\n$RefreshReg$(_c, \"AgentPerformanceChart\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\dashboard\\\\\\\\ChartLoading.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\dashboard\\\\ChartLoading.tsx\");\n  import.meta.hot.lastModified = \"1748255109666.7478\";\n}\n// REMIX HMR END\n\nexport function ChartLoading() {\n  return <div className=\"h-full flex items-center justify-center text-gray-500\">\r\n      <svg className=\"animate-spin -ml-1 mr-3 h-8 w-8 text-blue-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n      </svg>\r\n      Cargando datos del gr\u00E1fico...\r\n    </div>;\n}\n_c = ChartLoading;\nvar _c;\n$RefreshReg$(_c, \"ChartLoading\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\dashboard\\\\\\\\ChartError.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\dashboard\\\\ChartError.tsx\");\n  import.meta.hot.lastModified = \"1748255126384.798\";\n}\n// REMIX HMR END\n\nexport function ChartError({\n  message = \"No se pudieron cargar los datos del gr\u00E1fico.\"\n}) {\n  return <div className=\"h-full flex flex-col items-center justify-center text-red-500 p-4\">\r\n       <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-12 h-12 mb-2\">\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 9v3.75m9-.75a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 3.75h.008v.008H12v-.008Z\" />\r\n      </svg>\r\n      <p className=\"font-semibold\">Error</p>\r\n      <p>{message}</p>\r\n    </div>;\n}\n_c = ChartError;\nvar _c;\n$RefreshReg$(_c, \"ChartError\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["React", "ForwardRef", "React", "ForwardRef", "React", "ForwardRef", "defaultDatasetIdKey", "reforwardRef", "ref", "value", "current", "setOptions", "chart", "nextOptions", "options", "Object", "assign", "setLabels", "currentData", "nextLabels", "labels", "setDatasets", "nextDatasets", "datasetIdKey", "addedDatasets", "datasets", "map", "nextDataset", "currentDataset", "find", "dataset", "data", "includes", "push", "cloneData", "nextData", "ChartComponent", "props", "ref", "height", "width", "redraw", "datasetIdKey", "type", "data", "options", "plugins", "fallbackContent", "updateMode", "canvasProps", "canvasRef", "useRef", "chartRef", "renderChart", "current", "ChartJS", "cloneData", "reforwardRef", "destroyChart", "destroy", "useEffect", "setOptions", "setLabels", "config", "labels", "datasets", "setDatasets", "setTimeout", "update", "React", "canvas", "role", "Chart", "forwardRef", "createTypedChart", "registerables", "register", "Line", "LineController", "Bar", "BarController", "Doughnut", "createTypedChart", "DoughnutController", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "_c2"]
}
