{
  "version": 3,
  "sources": ["../../../app/lib/api/client.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\lib\\\\api\\\\client.ts\"\n);\nimport.meta.hot.lastModified = \"1746438788324.9072\";\n}\n// REMIX HMR END\n\n// app/lib/api/client.ts\r\nimport { json } from \"@remix-run/node\";\r\n\r\nconst API_URL = \"http://localhost:8080\";\r\n\r\nexport class ApiClient {\r\n  private baseUrl: string;\r\n  private defaultHeaders: Record<string, string>;\r\n\r\n  constructor(baseUrl = API_URL) {\r\n    this.baseUrl = baseUrl.endsWith('/') ? baseUrl.slice(0, -1) : baseUrl;\r\n    this.defaultHeaders = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\"\r\n    };\r\n  }\r\n\r\n  private buildUrl(endpoint: string): string {\r\n    const cleanEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\r\n    return `${this.baseUrl}${cleanEndpoint}`;\r\n  }\r\n\r\n  async get<T>(endpoint: string, params?: Record<string, any>): Promise<T> {\r\n    let url = this.buildUrl(endpoint);\r\n\r\n    if (params && Object.keys(params).length > 0) {\r\n      const searchParams = new URLSearchParams();\r\n      Object.entries(params).forEach(([key, value]) => {\r\n        if (value !== undefined && value !== null && value !== \"\") {\r\n          searchParams.append(key, String(value));\r\n        }\r\n      });\r\n      \r\n      const queryString = searchParams.toString();\r\n      if (queryString) {\r\n        url += `?${queryString}`;\r\n      }\r\n    }\r\n\r\n    console.log(`API GET: ${url}`);\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"GET\",\r\n        headers: this.defaultHeaders\r\n      });\r\n      \r\n      return this.handleResponse<T>(response);\r\n    } catch (error) {\r\n      console.error(\"Error en GET:\", error);\r\n      throw new ApiError(\"Error de conexi\u00F3n con el servidor\", 0, error instanceof Error ? error.message : String(error));\r\n    }\r\n  }\r\n\r\n  async post<T>(endpoint: string, data: any): Promise<T> {\r\n    const url = this.buildUrl(endpoint);\r\n    console.log(`API POST: ${url}`, data);\r\n    \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: this.defaultHeaders,\r\n        body: JSON.stringify(data)\r\n      });\r\n      \r\n      return this.handleResponse<T>(response);\r\n    } catch (error) {\r\n      console.error(\"Error en POST:\", error);\r\n      throw new ApiError(\"Error al comunicarse con el servidor\", 0, error instanceof Error ? error.message : String(error));\r\n    }\r\n  }\r\n\r\n  async put<T>(endpoint: string, data: any): Promise<T> {\r\n    const url = this.buildUrl(endpoint);\r\n    console.log(`API PUT: ${url}`, data);\r\n    \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"PUT\",\r\n        headers: this.defaultHeaders,\r\n        body: JSON.stringify(data)\r\n      });\r\n      \r\n      return this.handleResponse<T>(response);\r\n    } catch (error) {\r\n      console.error(\"Error en PUT:\", error);\r\n      throw new ApiError(\"Error de conexi\u00F3n con el servidor\", 0, error instanceof Error ? error.message : String(error));\r\n    }\r\n  }\r\n\r\n  async delete<T>(endpoint: string): Promise<T> {\r\n    const url = this.buildUrl(endpoint);\r\n    console.log(`API DELETE: ${url}`);\r\n    \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"DELETE\",\r\n        headers: this.defaultHeaders\r\n      });\r\n      \r\n      return this.handleResponse<T>(response);\r\n    } catch (error) {\r\n      console.error(\"Error en DELETE:\", error);\r\n      throw new ApiError(\"Error de conexi\u00F3n con el servidor\", 0, error instanceof Error ? error.message : String(error));\r\n    }\r\n  }\r\n\r\n  private async handleResponse<T>(response: Response): Promise<T> {\r\n    if (!response.ok) {\r\n      console.error(`HTTP error: ${response.status}`, response);\r\n      let errorMessage = `Error HTTP: ${response.status}`;\r\n      let errorDetails = response.statusText;\r\n      \r\n      try {\r\n        const errorData = await response.json();\r\n        errorMessage = errorData.detail || errorMessage;\r\n        errorDetails = JSON.stringify(errorData);\r\n      } catch (e) {\r\n        // si no podemos parsear el error, usamos valores por defecto\r\n      }\r\n      \r\n      throw new ApiError(errorMessage, response.status, errorDetails);\r\n    }\r\n\r\n    // Si es 204 No Content\r\n    if (response.status === 204) {\r\n      return {} as T;\r\n    }\r\n\r\n    try {\r\n      return await response.json() as T;\r\n    } catch (error) {\r\n      console.error(\"Error al parsear JSON:\", error);\r\n      throw new ApiError(\"Error al procesar la respuesta\", 0, error instanceof Error ? error.message : String(error));\r\n    }\r\n  }\r\n}\r\n\r\nexport class ApiError extends Error {\r\n  status: number;\r\n  details: string;\r\n\r\n  constructor(message: string, status: number, details: string) {\r\n    super(message);\r\n    this.name = \"ApiError\";\r\n    this.status = status;\r\n    this.details = details;\r\n  }\r\n}\r\n\r\nexport function handleApiError(error: unknown) {\r\n  console.error(\"Handling API Error:\", error);\r\n\r\n  if (error instanceof ApiError) {\r\n    return json(\r\n      { message: error.message, details: error.details },\r\n      { status: error.status || 500 }\r\n    );\r\n  }\r\n\r\n  return json(\r\n    { message: \"Ha ocurrido un error inesperado.\" },\r\n    { status: 500 }\r\n  );\r\n}\r\n\r\nexport const apiClient = new ApiClient();"],
  "mappings": "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",
  "names": []
}
