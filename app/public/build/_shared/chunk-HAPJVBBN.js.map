{
  "version": 3,
  "sources": ["../../../app/services/agents.service.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\services\\\\agents.service.ts\"\n);\nimport.meta.hot.lastModified = \"1748246654129.6638\";\n}\n// REMIX HMR END\n\n// app/services/agents.service.ts\r\nimport { apiClient } from \"~/lib/api/client\";\r\nimport type { Agent } from \"~/lib/types\";\r\n\r\n// Exportaciones individuales\r\nexport async function getAllAgents(): Promise<Agent[]> {\r\n  return await apiClient.get<Agent[]>(\"/agents/agents/\");\r\n}\r\n\r\nexport async function getAll(): Promise<Agent[]> {\r\n  return getAllAgents();\r\n}\r\n\r\nexport async function getAgentById(id: number): Promise<Agent> {\r\n  // Uso la ruta correcta seg\u00FAn el Swagger\r\n  return await apiClient.get<Agent>(`/agents/agents/${id}`);\r\n}\r\n\r\nexport async function getById(id: number): Promise<Agent> {\r\n  return getAgentById(id);\r\n}\r\n\r\nexport async function createAgent(agent: Partial<Agent>): Promise<Agent> {\r\n  return await apiClient.post<Agent>(\"/agents/agents/\", agent);\r\n}\r\n\r\nexport async function create(agent: Partial<Agent>): Promise<Agent> {\r\n  return createAgent(agent);\r\n}\r\n\r\nexport async function updateAgent(id: number, agent: Partial<Agent>): Promise<Agent> {\r\n  return await apiClient.put<Agent>(`/agents/agents/${id}`, agent);\r\n}\r\n\r\nexport async function update(id: number, agent: Partial<Agent>): Promise<Agent> {\r\n  return updateAgent(id, agent);\r\n}\r\n\r\nexport async function deleteAgent(id: number): Promise<void> {\r\n  await apiClient.delete<void>(`/agents/agents/${id}`);\r\n}\r\n\r\nexport async function delete_(id: number): Promise<void> {\r\n  return deleteAgent(id);\r\n}\r\n\r\n// Mantenemos tambi\u00E9n la clase con m\u00E9todos est\u00E1ticos para compatibilidad\r\nexport class AgentsService {\r\n  static async getAllAgents(): Promise<Agent[]> {\r\n    return getAllAgents();\r\n  }\r\n  \r\n  static async getAll(): Promise<Agent[]> {\r\n    return getAllAgents();\r\n  }\r\n  \r\n  static async getAgentById(id: number): Promise<Agent> {\r\n    return getAgentById(id);\r\n  }\r\n  \r\n  static async getById(id: number): Promise<Agent> {\r\n    return getAgentById(id);\r\n  }\r\n  \r\n  static async createAgent(agent: Partial<Agent>): Promise<Agent> {\r\n    return createAgent(agent);\r\n  }\r\n  \r\n  static async create(agent: Partial<Agent>): Promise<Agent> {\r\n    return createAgent(agent);\r\n  }\r\n  \r\n  static async updateAgent(id: number, agent: Partial<Agent>): Promise<Agent> {\r\n    return updateAgent(id, agent);\r\n  }\r\n  \r\n  static async update(id: number, agent: Partial<Agent>): Promise<Agent> {\r\n    return updateAgent(id, agent);\r\n  }\r\n  \r\n  static async deleteAgent(id: number): Promise<void> {\r\n    return deleteAgent(id);\r\n  }\r\n  \r\n  static async delete(id: number): Promise<void> {\r\n    return deleteAgent(id);\r\n  }\r\n}"],
  "mappings": ";;;;;;;;AAEA,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAQA,eAAsB,eAAiC;AACrD,SAAO,MAAM,UAAU,IAAa,iBAAiB;AACvD;AAMA,eAAsB,aAAa,IAA4B;AAE7D,SAAO,MAAM,UAAU,IAAW,kBAAkB,IAAI;AAC1D;AAMA,eAAsB,YAAY,OAAuC;AACvE,SAAO,MAAM,UAAU,KAAY,mBAAmB,KAAK;AAC7D;AAMA,eAAsB,YAAY,IAAY,OAAuC;AACnF,SAAO,MAAM,UAAU,IAAW,kBAAkB,MAAM,KAAK;AACjE;AAMA,eAAsB,YAAY,IAA2B;AAC3D,QAAM,UAAU,OAAa,kBAAkB,IAAI;AACrD;AAOO,IAAM,gBAAN,MAAoB;AAAA,EACzB,aAAa,eAAiC;AAC5C,WAAO,aAAa;AAAA,EACtB;AAAA,EAEA,aAAa,SAA2B;AACtC,WAAO,aAAa;AAAA,EACtB;AAAA,EAEA,aAAa,aAAa,IAA4B;AACpD,WAAO,aAAa,EAAE;AAAA,EACxB;AAAA,EAEA,aAAa,QAAQ,IAA4B;AAC/C,WAAO,aAAa,EAAE;AAAA,EACxB;AAAA,EAEA,aAAa,YAAY,OAAuC;AAC9D,WAAO,YAAY,KAAK;AAAA,EAC1B;AAAA,EAEA,aAAa,OAAO,OAAuC;AACzD,WAAO,YAAY,KAAK;AAAA,EAC1B;AAAA,EAEA,aAAa,YAAY,IAAY,OAAuC;AAC1E,WAAO,YAAY,IAAI,KAAK;AAAA,EAC9B;AAAA,EAEA,aAAa,OAAO,IAAY,OAAuC;AACrE,WAAO,YAAY,IAAI,KAAK;AAAA,EAC9B;AAAA,EAEA,aAAa,YAAY,IAA2B;AAClD,WAAO,YAAY,EAAE;AAAA,EACvB;AAAA,EAEA,aAAa,OAAO,IAA2B;AAC7C,WAAO,YAAY,EAAE;AAAA,EACvB;AACF;",
  "names": []
}
