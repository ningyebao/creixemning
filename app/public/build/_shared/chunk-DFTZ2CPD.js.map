{
  "version": 3,
  "sources": ["../../../app/routes/assignments.filter-actions.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\assignments.filter-actions.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\assignments.filter-actions.tsx\");\n  import.meta.hot.lastModified = \"1748855419924.1072\";\n}\n// REMIX HMR END\n\n// app/routes/assignments.filter-actions.tsx\nimport { useState } from 'react';\nexport default function FilterActions({\n  activeFilters,\n  onSaveFilters,\n  onToggleAutoFilter,\n  onToggleSavedFilters,\n  showAutoFilter,\n  showSavedFilters\n}) {\n  _s();\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n  const [filterName, setFilterName] = useState('');\n  const [filterDescription, setFilterDescription] = useState('');\n  const [saveError, setSaveError] = useState('');\n  const hasActiveFilters = Object.keys(activeFilters).length > 0;\n  const handleSave = () => {\n    setSaveError('');\n    if (!filterName.trim()) {\n      setSaveError('El nombre es obligatorio');\n      return;\n    }\n    console.log('Guardando filtros:', {\n      name: filterName,\n      description: filterDescription,\n      filters: activeFilters\n    });\n    onSaveFilters(filterName.trim(), filterDescription.trim());\n\n    // Resetear el formulario\n    setFilterName('');\n    setFilterDescription('');\n    setShowSaveDialog(false);\n  };\n  const handleCancel = () => {\n    setFilterName('');\n    setFilterDescription('');\n    setSaveError('');\n    setShowSaveDialog(false);\n  };\n  return <div className=\"bg-white rounded-lg shadow-md border border-gray-200 overflow-hidden\">\r\n      <div className=\"bg-gray-50 px-4 py-3 border-b border-gray-200\">\r\n        <h3 className=\"text-base font-medium text-gray-800\">Acciones de filtros</h3>\r\n      </div>\r\n      \r\n      <div className=\"p-4 space-y-3\">\r\n        {/* Bot\u00F3n para guardar filtros */}\r\n        <button type=\"button\" disabled={!hasActiveFilters} onClick={() => setShowSaveDialog(true)} className={`w-full px-4 py-2 rounded-md text-sm font-medium transition-colors flex items-center justify-center gap-2 ${hasActiveFilters ? 'bg-indigo-600 text-white hover:bg-indigo-700' : 'bg-gray-100 text-gray-400 cursor-not-allowed'}`}>\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V2\" />\r\n          </svg>\r\n          Guardar filtros actuales\r\n        </button>\r\n\r\n        {/* Bot\u00F3n para ver filtros guardados */}\r\n        <button type=\"button\" onClick={onToggleSavedFilters} className={`w-full px-4 py-2 rounded-md text-sm font-medium transition-colors flex items-center justify-center gap-2 ${showSavedFilters ? 'bg-indigo-100 text-indigo-700 border border-indigo-300' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}`}>\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\" />\r\n          </svg>\r\n          Ver filtros guardados\r\n        </button>\r\n\r\n        {/* Bot\u00F3n para automatizaci\u00F3n */}\r\n        <button type=\"button\" onClick={onToggleAutoFilter} className={`w-full px-4 py-2 rounded-md text-sm font-medium transition-colors flex items-center justify-center gap-2 ${showAutoFilter ? 'bg-indigo-100 text-indigo-700 border border-indigo-300' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}`}>\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\" />\r\n          </svg>\r\n          Automatizar filtros\r\n        </button>\r\n      </div>\r\n\r\n      {/* Dialog para guardar filtros */}\r\n      {showSaveDialog && <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">Guardar grupo de filtros</h3>\r\n            </div>\r\n            \r\n            <div className=\"px-6 py-4 space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"filter-name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Nombre del grupo *\r\n                </label>\r\n                <input type=\"text\" id=\"filter-name\" value={filterName} onChange={e => setFilterName(e.target.value)} className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\" placeholder=\"Ej: Leads Barcelona Activos\" autoFocus />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"filter-description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Descripci\u00F3n (opcional)\r\n                </label>\r\n                <textarea id=\"filter-description\" value={filterDescription} onChange={e => setFilterDescription(e.target.value)} className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\" rows={3} placeholder=\"Describe para qu\u00E9 se usan estos filtros...\" />\r\n              </div>\r\n\r\n              {/* Mostrar los filtros que se van a guardar */}\r\n              <div className=\"bg-gray-50 rounded-md p-3\">\r\n                <p className=\"text-sm font-medium text-gray-700 mb-2\">\r\n                  Filtros a guardar ({Object.keys(activeFilters).length}):\r\n                </p>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {Object.entries(activeFilters).map(([key, value]) => <span key={key} className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-indigo-100 text-indigo-800\">\r\n                      {key.replace(/_/g, ' ')}: {String(value)}\r\n                    </span>)}\r\n                </div>\r\n              </div>\r\n\r\n              {saveError && <div className=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 rounded-md text-sm\">\r\n                  {saveError}\r\n                </div>}\r\n            </div>\r\n\r\n            <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-end space-x-3\">\r\n              <button type=\"button\" onClick={handleCancel} className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\">\r\n                Cancelar\r\n              </button>\r\n              <button type=\"button\" onClick={handleSave} className=\"px-4 py-2 bg-indigo-600 text-white rounded-md text-sm font-medium hover:bg-indigo-700\">\r\n                Guardar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n    </div>;\n}\n_s(FilterActions, \"vkX7oiNNeTxO7f7zudHa8r9AJ9c=\");\n_c = FilterActions;\nvar _c;\n$RefreshReg$(_c, \"FilterActions\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
